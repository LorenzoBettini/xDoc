/*
 * generated by Xtext
 */
package org.eclipse.xtext.xdoc.ui;

import org.eclipse.jface.text.reconciler.IReconciler;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.builder.BuilderParticipant;
import org.eclipse.xtext.builder.IXtextBuilderParticipant;
import org.eclipse.xtext.generator.OutputConfigurationProvider;
import org.eclipse.xtext.ui.editor.autoedit.AbstractEditStrategyProvider;
import org.eclipse.xtext.ui.editor.folding.IFoldingRegionProvider;
import org.eclipse.xtext.ui.editor.quickfix.XtextQuickAssistProcessor;
import org.eclipse.xtext.ui.editor.syntaxcoloring.DefaultAntlrTokenToAttributeIdMapper;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.editor.syntaxcoloring.ISemanticHighlightingCalculator;
import org.eclipse.xtext.xdoc.ui.autoedit.AutoEditProvider;
import org.eclipse.xtext.xdoc.ui.builder.XdocOutputConfigurationProvider;
import org.eclipse.xtext.xdoc.ui.coloring.SemanticHighlightingCalculator;
import org.eclipse.xtext.xdoc.ui.coloring.SemanticHighlightingConfiguration;
import org.eclipse.xtext.xdoc.ui.coloring.TokenToAttributeMapper;
import org.eclipse.xtext.xdoc.ui.editor.spelling.XdocReconciler;
import org.eclipse.xtext.xdoc.ui.folding.FoldingRegionProvider;
import org.eclipse.xtext.xdoc.ui.quickfix.XdocQuickAssistProcessor;

/**
 * Use this class to register components to be used within the IDE.
 */
public class XdocUiModule extends org.eclipse.xtext.xdoc.ui.AbstractXdocUiModule {
	public XdocUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}

	public Class<? extends DefaultAntlrTokenToAttributeIdMapper> bindTokenToAttributeMapper() {
		return TokenToAttributeMapper.class;
	}

	public Class<? extends ISemanticHighlightingCalculator> bindISemanticHighlightingCalculator() {
		return SemanticHighlightingCalculator.class;
	}

	public Class<? extends IHighlightingConfiguration> bindIHighlightingConfiguration() {
		return SemanticHighlightingConfiguration.class;
	}

	@Override
	public Class<? extends AbstractEditStrategyProvider> bindAbstractEditStrategyProvider() {
		return AutoEditProvider.class;
	}

	public Class<? extends IFoldingRegionProvider> bindIFoldingRegionProvider() {
		return FoldingRegionProvider.class;
	}

	@Override
	public Class<? extends IReconciler> bindIReconciler() {
		return XdocReconciler.class;
	}

	public Class<? extends XtextQuickAssistProcessor> bindXtextQuickAssistProcessor(){
		return XdocQuickAssistProcessor.class;
	}

	public Class<? extends IXtextBuilderParticipant> bindIXtextBuilderParticipant() {
		return BuilderParticipant.class;
	}

	public Class<? extends OutputConfigurationProvider> bindOutputConfigurationProvider() {
		return XdocOutputConfigurationProvider.class;
	}
}
