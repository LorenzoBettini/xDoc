grammar org.eclipse.xtext.xdoc.XDoc hidden (SL_COMMENT)

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "classpath:/model/JavaVMTypes.ecore" as types
generate xdoc "http://www.eclipse.org/xtext/xdoc/Xdoc"

/*Foo:
	doc=Document;*/

Document:
	{Document}
	((contents+=ParBreak? chapters+=Chapter)+ |
	(contents+=ParBreak? sections+=Section)+ |
	(contents+=ParBreak? subsections+=SubSection)+)
	contents+=ParBreak?;

Chapter:
	'\\chapter' (':' name=ID)? '[' title=TextOrMarkupLine ']' WS*
	((contents+=ParBreak contents+=TextOrMarkupLine)(contents+=TextOrMarkup)*)?
	(contents+=ParBreak? contents+=Section)*;

Section:
	'\\section' (':' name=ID)? '[' title=TextOrMarkupLine ']' WS*
	((contents+=ParBreak contents+=TextOrMarkupLine)(contents+=TextOrMarkup)*)?
	(contents+=ParBreak? contents+=SubSection)*;

SubSection:
	'\\subsection' (':' name=ID)? '[' title=TextOrMarkupLine ']' WS*
	((contents+=ParBreak contents+=TextOrMarkupLine)(contents+=TextOrMarkup)*)?
	(contents+=ParBreak? contents+=Section3)*;

Section3:
	'\\section3' (':' name=ID)? '[' title=TextOrMarkupLine ']' WS*
	((contents+=ParBreak contents+=TextOrMarkupLine)(contents+=TextOrMarkup)*)?
	(contents+=ParBreak? contents+=Section4)*;

Section4:
	'\\section4' (':' name=ID)? '[' title=TextOrMarkupLine ']' WS*
	((contents+=ParBreak contents+=TextOrMarkupLine)(contents+=TextOrMarkup)*)?;

Identifiable:
	Chapter | Section | SubSection | Section3 | Section4 | Anchor;

TextOrMarkup:
	contents+=ParBreak
	(contents+=TextPart
	(contents+=MarkUp contents+=TextPart?)* |
	(contents+=MarkUp contents+=TextPart?)+)  ;

TextOrMarkupLine:
	(contents+=TextPart
	(contents+=MarkUp contents+=TextPart?)* |
	(contents+=MarkUp contents+=TextPart?)+);

MarkUp:
	Emphasize |
	Anchor |
	Ref |
	OrderedList |
	UnorderedList |
	CodeBlock |
	CodeRef |
	Link |
	ImageRef;

Emphasize:
	'\\emph' ('[' contents+=TextOrMarkupLine ']');

Anchor:
	'\\a' ':' name=ID ('[' ']')?;

Ref:
	'\\ref' ':' ref=[Identifiable] '[' contents+=TextOrMarkupLine ']';

OrderedList:
	'\\ol' WS* '[' WS* //WS
		items+=Item+
	']';

UnorderedList:
	'\\ul' WS* '[' WS* //WS
		items+=Item+
	']';

Item:
	'\\item' WS* '[' contents+=TextOrMarkup (contents+=ParBreak contents+=TextOrMarkup)* ']' WS*;

CodeRef:
	'\\codeRef' '[' element=[types::JvmIdentifyableElement|Text] ']';

Link:
	'\\link' '[' url=Text ']''['text=Text']';
	
ImageRef:
	'\\img'(':' name=ID)? '['path=Text /*TODO make it a crossreference to images */ ']''['clazz=Text']' '['style=Text']' '[' caption=Text']';

CodeBlock:
	'\\code' ('[' language=ID ']')? WS* ParBreak?'['
		(contents+=Code
		(contents+=MarkupInCode contents+=Code?)* |
		(contents+=MarkupInCode contents+=Code?)+)
	']';

ParBreak:
	c=MULTI_NL;

TextPart:
	text=Text;

Text:
	(ID | WS | ANY_OTHER | '\\[' | '\\]' | ':')+;

CodeText:
	(ID | MULTI_NL | WS | ANY_OTHER | '\\[' | '\\]' | ':')+;

MarkupInCode:
	Emphasize |
	Anchor |
	Ref;

Code:
	contents=CodeText;


terminal ID:
	('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;

terminal SL_COMMENT:
	'%%' !('\n' | '\r')* ('\r'? '\n')?;

terminal MULTI_NL:
	('\r'? '\n') (' '|'\t')* ('\r'? '\n') WS*;

terminal WS:
	' ' | '\t' | '\r' | '\n';

terminal ANY_OTHER:
	.;
