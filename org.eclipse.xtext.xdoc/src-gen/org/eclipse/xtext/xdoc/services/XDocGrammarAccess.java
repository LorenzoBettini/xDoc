/*
* generated by Xtext
*/

package org.eclipse.xtext.xdoc.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class XDocGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DocumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Document");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDocumentAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cContentsAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_1_0_0_0 = (RuleCall)cContentsAssignment_1_0_0.eContents().get(0);
		private final Assignment cChaptersAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cChaptersChapterParserRuleCall_1_0_1_0 = (RuleCall)cChaptersAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cContentsAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_1_1_0_0 = (RuleCall)cContentsAssignment_1_1_0.eContents().get(0);
		private final Assignment cSectionsAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cSectionsSectionParserRuleCall_1_1_1_0 = (RuleCall)cSectionsAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Assignment cContentsAssignment_1_2_0 = (Assignment)cGroup_1_2.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_1_2_0_0 = (RuleCall)cContentsAssignment_1_2_0.eContents().get(0);
		private final Assignment cSubsectionsAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cSubsectionsSubSectionParserRuleCall_1_2_1_0 = (RuleCall)cSubsectionsAssignment_1_2_1.eContents().get(0);
		private final Assignment cContentsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cContentsParBreakParserRuleCall_2_0 = (RuleCall)cContentsAssignment_2.eContents().get(0);
		
		/// *Foo:
		//	doc=Document;* /Document:
		//	{Document} ((contents+=ParBreak? chapters+=Chapter)+ | (contents+=ParBreak? sections+=Section)+ | (contents+=ParBreak?
		//	subsections+=SubSection)+) contents+=ParBreak?;
		public ParserRule getRule() { return rule; }

		//{Document} ((contents+=ParBreak? chapters+=Chapter)+ | (contents+=ParBreak? sections+=Section)+ | (contents+=ParBreak?
		//subsections+=SubSection)+) contents+=ParBreak?
		public Group getGroup() { return cGroup; }

		//{Document}
		public Action getDocumentAction_0() { return cDocumentAction_0; }

		//(contents+=ParBreak? chapters+=Chapter)+ | (contents+=ParBreak? sections+=Section)+ | (contents+=ParBreak?
		//subsections+=SubSection)+
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//(contents+=ParBreak? chapters+=Chapter)+
		public Group getGroup_1_0() { return cGroup_1_0; }

		//contents+=ParBreak?
		public Assignment getContentsAssignment_1_0_0() { return cContentsAssignment_1_0_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_1_0_0_0() { return cContentsParBreakParserRuleCall_1_0_0_0; }

		//chapters+=Chapter
		public Assignment getChaptersAssignment_1_0_1() { return cChaptersAssignment_1_0_1; }

		//Chapter
		public RuleCall getChaptersChapterParserRuleCall_1_0_1_0() { return cChaptersChapterParserRuleCall_1_0_1_0; }

		//(contents+=ParBreak? sections+=Section)+
		public Group getGroup_1_1() { return cGroup_1_1; }

		//contents+=ParBreak?
		public Assignment getContentsAssignment_1_1_0() { return cContentsAssignment_1_1_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_1_1_0_0() { return cContentsParBreakParserRuleCall_1_1_0_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_1_1_1() { return cSectionsAssignment_1_1_1; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_1_1_1_0() { return cSectionsSectionParserRuleCall_1_1_1_0; }

		//(contents+=ParBreak? subsections+=SubSection)+
		public Group getGroup_1_2() { return cGroup_1_2; }

		//contents+=ParBreak?
		public Assignment getContentsAssignment_1_2_0() { return cContentsAssignment_1_2_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_1_2_0_0() { return cContentsParBreakParserRuleCall_1_2_0_0; }

		//subsections+=SubSection
		public Assignment getSubsectionsAssignment_1_2_1() { return cSubsectionsAssignment_1_2_1; }

		//SubSection
		public RuleCall getSubsectionsSubSectionParserRuleCall_1_2_1_0() { return cSubsectionsSubSectionParserRuleCall_1_2_1_0; }

		//contents+=ParBreak?
		public Assignment getContentsAssignment_2() { return cContentsAssignment_2; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_2_0() { return cContentsParBreakParserRuleCall_2_0; }
	}

	public class ChapterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Chapter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChapterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTitleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTitleTextOrMarkupLineParserRuleCall_3_0 = (RuleCall)cTitleAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cGroup_6.eContents().get(0);
		private final Assignment cContentsAssignment_6_0_0 = (Assignment)cGroup_6_0.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_6_0_0_0 = (RuleCall)cContentsAssignment_6_0_0.eContents().get(0);
		private final Assignment cContentsAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupLineParserRuleCall_6_0_1_0 = (RuleCall)cContentsAssignment_6_0_1.eContents().get(0);
		private final Assignment cContentsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_6_1_0 = (RuleCall)cContentsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cContentsAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_7_0_0 = (RuleCall)cContentsAssignment_7_0.eContents().get(0);
		private final Assignment cContentsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cContentsSectionParserRuleCall_7_1_0 = (RuleCall)cContentsAssignment_7_1.eContents().get(0);
		
		//Chapter:
		//	"\\chapter" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
		//	contents+=TextOrMarkup*)? (contents+=ParBreak? contents+=Section)*;
		public ParserRule getRule() { return rule; }

		//"\\chapter" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
		//contents+=TextOrMarkup*)? (contents+=ParBreak? contents+=Section)*
		public Group getGroup() { return cGroup; }

		//"\\chapter"
		public Keyword getChapterKeyword_0() { return cChapterKeyword_0; }

		//(":" name=ID)?
		public Group getGroup_1() { return cGroup_1; }

		//":"
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//title=TextOrMarkupLine
		public Assignment getTitleAssignment_3() { return cTitleAssignment_3; }

		//TextOrMarkupLine
		public RuleCall getTitleTextOrMarkupLineParserRuleCall_3_0() { return cTitleTextOrMarkupLineParserRuleCall_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }

		//WS*
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//((contents+=ParBreak contents+=TextOrMarkupLine) contents+=TextOrMarkup*)?
		public Group getGroup_6() { return cGroup_6; }

		//contents+=ParBreak contents+=TextOrMarkupLine
		public Group getGroup_6_0() { return cGroup_6_0; }

		//contents+=ParBreak
		public Assignment getContentsAssignment_6_0_0() { return cContentsAssignment_6_0_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_6_0_0_0() { return cContentsParBreakParserRuleCall_6_0_0_0; }

		//contents+=TextOrMarkupLine
		public Assignment getContentsAssignment_6_0_1() { return cContentsAssignment_6_0_1; }

		//TextOrMarkupLine
		public RuleCall getContentsTextOrMarkupLineParserRuleCall_6_0_1_0() { return cContentsTextOrMarkupLineParserRuleCall_6_0_1_0; }

		//contents+=TextOrMarkup*
		public Assignment getContentsAssignment_6_1() { return cContentsAssignment_6_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_6_1_0() { return cContentsTextOrMarkupParserRuleCall_6_1_0; }

		//(contents+=ParBreak? contents+=Section)*
		public Group getGroup_7() { return cGroup_7; }

		//contents+=ParBreak?
		public Assignment getContentsAssignment_7_0() { return cContentsAssignment_7_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_7_0_0() { return cContentsParBreakParserRuleCall_7_0_0; }

		//contents+=Section
		public Assignment getContentsAssignment_7_1() { return cContentsAssignment_7_1; }

		//Section
		public RuleCall getContentsSectionParserRuleCall_7_1_0() { return cContentsSectionParserRuleCall_7_1_0; }
	}

	public class SectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTitleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTitleTextOrMarkupLineParserRuleCall_3_0 = (RuleCall)cTitleAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cGroup_6.eContents().get(0);
		private final Assignment cContentsAssignment_6_0_0 = (Assignment)cGroup_6_0.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_6_0_0_0 = (RuleCall)cContentsAssignment_6_0_0.eContents().get(0);
		private final Assignment cContentsAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupLineParserRuleCall_6_0_1_0 = (RuleCall)cContentsAssignment_6_0_1.eContents().get(0);
		private final Assignment cContentsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_6_1_0 = (RuleCall)cContentsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cContentsAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_7_0_0 = (RuleCall)cContentsAssignment_7_0.eContents().get(0);
		private final Assignment cContentsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cContentsSubSectionParserRuleCall_7_1_0 = (RuleCall)cContentsAssignment_7_1.eContents().get(0);
		
		//Section:
		//	"\\section" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
		//	contents+=TextOrMarkup*)? (contents+=ParBreak? contents+=SubSection)*;
		public ParserRule getRule() { return rule; }

		//"\\section" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
		//contents+=TextOrMarkup*)? (contents+=ParBreak? contents+=SubSection)*
		public Group getGroup() { return cGroup; }

		//"\\section"
		public Keyword getSectionKeyword_0() { return cSectionKeyword_0; }

		//(":" name=ID)?
		public Group getGroup_1() { return cGroup_1; }

		//":"
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//title=TextOrMarkupLine
		public Assignment getTitleAssignment_3() { return cTitleAssignment_3; }

		//TextOrMarkupLine
		public RuleCall getTitleTextOrMarkupLineParserRuleCall_3_0() { return cTitleTextOrMarkupLineParserRuleCall_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }

		//WS*
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//((contents+=ParBreak contents+=TextOrMarkupLine) contents+=TextOrMarkup*)?
		public Group getGroup_6() { return cGroup_6; }

		//contents+=ParBreak contents+=TextOrMarkupLine
		public Group getGroup_6_0() { return cGroup_6_0; }

		//contents+=ParBreak
		public Assignment getContentsAssignment_6_0_0() { return cContentsAssignment_6_0_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_6_0_0_0() { return cContentsParBreakParserRuleCall_6_0_0_0; }

		//contents+=TextOrMarkupLine
		public Assignment getContentsAssignment_6_0_1() { return cContentsAssignment_6_0_1; }

		//TextOrMarkupLine
		public RuleCall getContentsTextOrMarkupLineParserRuleCall_6_0_1_0() { return cContentsTextOrMarkupLineParserRuleCall_6_0_1_0; }

		//contents+=TextOrMarkup*
		public Assignment getContentsAssignment_6_1() { return cContentsAssignment_6_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_6_1_0() { return cContentsTextOrMarkupParserRuleCall_6_1_0; }

		//(contents+=ParBreak? contents+=SubSection)*
		public Group getGroup_7() { return cGroup_7; }

		//contents+=ParBreak?
		public Assignment getContentsAssignment_7_0() { return cContentsAssignment_7_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_7_0_0() { return cContentsParBreakParserRuleCall_7_0_0; }

		//contents+=SubSection
		public Assignment getContentsAssignment_7_1() { return cContentsAssignment_7_1; }

		//SubSection
		public RuleCall getContentsSubSectionParserRuleCall_7_1_0() { return cContentsSubSectionParserRuleCall_7_1_0; }
	}

	public class SubSectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubSection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubsectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTitleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTitleTextOrMarkupLineParserRuleCall_3_0 = (RuleCall)cTitleAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cGroup_6.eContents().get(0);
		private final Assignment cContentsAssignment_6_0_0 = (Assignment)cGroup_6_0.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_6_0_0_0 = (RuleCall)cContentsAssignment_6_0_0.eContents().get(0);
		private final Assignment cContentsAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupLineParserRuleCall_6_0_1_0 = (RuleCall)cContentsAssignment_6_0_1.eContents().get(0);
		private final Assignment cContentsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_6_1_0 = (RuleCall)cContentsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cContentsAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_7_0_0 = (RuleCall)cContentsAssignment_7_0.eContents().get(0);
		private final Assignment cContentsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cContentsSection3ParserRuleCall_7_1_0 = (RuleCall)cContentsAssignment_7_1.eContents().get(0);
		
		//SubSection:
		//	"\\subsection" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
		//	contents+=TextOrMarkup*)? (contents+=ParBreak? contents+=Section3)*;
		public ParserRule getRule() { return rule; }

		//"\\subsection" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
		//contents+=TextOrMarkup*)? (contents+=ParBreak? contents+=Section3)*
		public Group getGroup() { return cGroup; }

		//"\\subsection"
		public Keyword getSubsectionKeyword_0() { return cSubsectionKeyword_0; }

		//(":" name=ID)?
		public Group getGroup_1() { return cGroup_1; }

		//":"
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//title=TextOrMarkupLine
		public Assignment getTitleAssignment_3() { return cTitleAssignment_3; }

		//TextOrMarkupLine
		public RuleCall getTitleTextOrMarkupLineParserRuleCall_3_0() { return cTitleTextOrMarkupLineParserRuleCall_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }

		//WS*
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//((contents+=ParBreak contents+=TextOrMarkupLine) contents+=TextOrMarkup*)?
		public Group getGroup_6() { return cGroup_6; }

		//contents+=ParBreak contents+=TextOrMarkupLine
		public Group getGroup_6_0() { return cGroup_6_0; }

		//contents+=ParBreak
		public Assignment getContentsAssignment_6_0_0() { return cContentsAssignment_6_0_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_6_0_0_0() { return cContentsParBreakParserRuleCall_6_0_0_0; }

		//contents+=TextOrMarkupLine
		public Assignment getContentsAssignment_6_0_1() { return cContentsAssignment_6_0_1; }

		//TextOrMarkupLine
		public RuleCall getContentsTextOrMarkupLineParserRuleCall_6_0_1_0() { return cContentsTextOrMarkupLineParserRuleCall_6_0_1_0; }

		//contents+=TextOrMarkup*
		public Assignment getContentsAssignment_6_1() { return cContentsAssignment_6_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_6_1_0() { return cContentsTextOrMarkupParserRuleCall_6_1_0; }

		//(contents+=ParBreak? contents+=Section3)*
		public Group getGroup_7() { return cGroup_7; }

		//contents+=ParBreak?
		public Assignment getContentsAssignment_7_0() { return cContentsAssignment_7_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_7_0_0() { return cContentsParBreakParserRuleCall_7_0_0; }

		//contents+=Section3
		public Assignment getContentsAssignment_7_1() { return cContentsAssignment_7_1; }

		//Section3
		public RuleCall getContentsSection3ParserRuleCall_7_1_0() { return cContentsSection3ParserRuleCall_7_1_0; }
	}

	public class Section3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Section3");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSection3Keyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTitleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTitleTextOrMarkupLineParserRuleCall_3_0 = (RuleCall)cTitleAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cGroup_6.eContents().get(0);
		private final Assignment cContentsAssignment_6_0_0 = (Assignment)cGroup_6_0.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_6_0_0_0 = (RuleCall)cContentsAssignment_6_0_0.eContents().get(0);
		private final Assignment cContentsAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupLineParserRuleCall_6_0_1_0 = (RuleCall)cContentsAssignment_6_0_1.eContents().get(0);
		private final Assignment cContentsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_6_1_0 = (RuleCall)cContentsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cContentsAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_7_0_0 = (RuleCall)cContentsAssignment_7_0.eContents().get(0);
		private final Assignment cContentsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cContentsSection4ParserRuleCall_7_1_0 = (RuleCall)cContentsAssignment_7_1.eContents().get(0);
		
		//Section3:
		//	"\\section3" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
		//	contents+=TextOrMarkup*)? (contents+=ParBreak? contents+=Section4)*;
		public ParserRule getRule() { return rule; }

		//"\\section3" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
		//contents+=TextOrMarkup*)? (contents+=ParBreak? contents+=Section4)*
		public Group getGroup() { return cGroup; }

		//"\\section3"
		public Keyword getSection3Keyword_0() { return cSection3Keyword_0; }

		//(":" name=ID)?
		public Group getGroup_1() { return cGroup_1; }

		//":"
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//title=TextOrMarkupLine
		public Assignment getTitleAssignment_3() { return cTitleAssignment_3; }

		//TextOrMarkupLine
		public RuleCall getTitleTextOrMarkupLineParserRuleCall_3_0() { return cTitleTextOrMarkupLineParserRuleCall_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }

		//WS*
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//((contents+=ParBreak contents+=TextOrMarkupLine) contents+=TextOrMarkup*)?
		public Group getGroup_6() { return cGroup_6; }

		//contents+=ParBreak contents+=TextOrMarkupLine
		public Group getGroup_6_0() { return cGroup_6_0; }

		//contents+=ParBreak
		public Assignment getContentsAssignment_6_0_0() { return cContentsAssignment_6_0_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_6_0_0_0() { return cContentsParBreakParserRuleCall_6_0_0_0; }

		//contents+=TextOrMarkupLine
		public Assignment getContentsAssignment_6_0_1() { return cContentsAssignment_6_0_1; }

		//TextOrMarkupLine
		public RuleCall getContentsTextOrMarkupLineParserRuleCall_6_0_1_0() { return cContentsTextOrMarkupLineParserRuleCall_6_0_1_0; }

		//contents+=TextOrMarkup*
		public Assignment getContentsAssignment_6_1() { return cContentsAssignment_6_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_6_1_0() { return cContentsTextOrMarkupParserRuleCall_6_1_0; }

		//(contents+=ParBreak? contents+=Section4)*
		public Group getGroup_7() { return cGroup_7; }

		//contents+=ParBreak?
		public Assignment getContentsAssignment_7_0() { return cContentsAssignment_7_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_7_0_0() { return cContentsParBreakParserRuleCall_7_0_0; }

		//contents+=Section4
		public Assignment getContentsAssignment_7_1() { return cContentsAssignment_7_1; }

		//Section4
		public RuleCall getContentsSection4ParserRuleCall_7_1_0() { return cContentsSection4ParserRuleCall_7_1_0; }
	}

	public class Section4Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Section4");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSection4Keyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTitleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTitleTextOrMarkupLineParserRuleCall_3_0 = (RuleCall)cTitleAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cGroup_6.eContents().get(0);
		private final Assignment cContentsAssignment_6_0_0 = (Assignment)cGroup_6_0.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_6_0_0_0 = (RuleCall)cContentsAssignment_6_0_0.eContents().get(0);
		private final Assignment cContentsAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupLineParserRuleCall_6_0_1_0 = (RuleCall)cContentsAssignment_6_0_1.eContents().get(0);
		private final Assignment cContentsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_6_1_0 = (RuleCall)cContentsAssignment_6_1.eContents().get(0);
		
		//Section4:
		//	"\\section4" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
		//	contents+=TextOrMarkup*)?;
		public ParserRule getRule() { return rule; }

		//"\\section4" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
		//contents+=TextOrMarkup*)?
		public Group getGroup() { return cGroup; }

		//"\\section4"
		public Keyword getSection4Keyword_0() { return cSection4Keyword_0; }

		//(":" name=ID)?
		public Group getGroup_1() { return cGroup_1; }

		//":"
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//title=TextOrMarkupLine
		public Assignment getTitleAssignment_3() { return cTitleAssignment_3; }

		//TextOrMarkupLine
		public RuleCall getTitleTextOrMarkupLineParserRuleCall_3_0() { return cTitleTextOrMarkupLineParserRuleCall_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }

		//WS*
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//((contents+=ParBreak contents+=TextOrMarkupLine) contents+=TextOrMarkup*)?
		public Group getGroup_6() { return cGroup_6; }

		//contents+=ParBreak contents+=TextOrMarkupLine
		public Group getGroup_6_0() { return cGroup_6_0; }

		//contents+=ParBreak
		public Assignment getContentsAssignment_6_0_0() { return cContentsAssignment_6_0_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_6_0_0_0() { return cContentsParBreakParserRuleCall_6_0_0_0; }

		//contents+=TextOrMarkupLine
		public Assignment getContentsAssignment_6_0_1() { return cContentsAssignment_6_0_1; }

		//TextOrMarkupLine
		public RuleCall getContentsTextOrMarkupLineParserRuleCall_6_0_1_0() { return cContentsTextOrMarkupLineParserRuleCall_6_0_1_0; }

		//contents+=TextOrMarkup*
		public Assignment getContentsAssignment_6_1() { return cContentsAssignment_6_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_6_1_0() { return cContentsTextOrMarkupParserRuleCall_6_1_0; }
	}

	public class IdentifiableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Identifiable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cChapterParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSectionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSubSectionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSection3ParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSection4ParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAnchorParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Identifiable:
		//	Chapter | Section | SubSection | Section3 | Section4 | Anchor;
		public ParserRule getRule() { return rule; }

		//Chapter | Section | SubSection | Section3 | Section4 | Anchor
		public Alternatives getAlternatives() { return cAlternatives; }

		//Chapter
		public RuleCall getChapterParserRuleCall_0() { return cChapterParserRuleCall_0; }

		//Section
		public RuleCall getSectionParserRuleCall_1() { return cSectionParserRuleCall_1; }

		//SubSection
		public RuleCall getSubSectionParserRuleCall_2() { return cSubSectionParserRuleCall_2; }

		//Section3
		public RuleCall getSection3ParserRuleCall_3() { return cSection3ParserRuleCall_3; }

		//Section4
		public RuleCall getSection4ParserRuleCall_4() { return cSection4ParserRuleCall_4; }

		//Anchor
		public RuleCall getAnchorParserRuleCall_5() { return cAnchorParserRuleCall_5; }
	}

	public class TextOrMarkupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextOrMarkup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cContentsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_0_0 = (RuleCall)cContentsAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cContentsAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final RuleCall cContentsTextPartParserRuleCall_1_0_0_0 = (RuleCall)cContentsAssignment_1_0_0.eContents().get(0);
		private final Group cGroup_1_0_1 = (Group)cGroup_1_0.eContents().get(1);
		private final Assignment cContentsAssignment_1_0_1_0 = (Assignment)cGroup_1_0_1.eContents().get(0);
		private final RuleCall cContentsMarkUpParserRuleCall_1_0_1_0_0 = (RuleCall)cContentsAssignment_1_0_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_1_0_1_1 = (Assignment)cGroup_1_0_1.eContents().get(1);
		private final RuleCall cContentsTextPartParserRuleCall_1_0_1_1_0 = (RuleCall)cContentsAssignment_1_0_1_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cContentsAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final RuleCall cContentsMarkUpParserRuleCall_1_1_0_0 = (RuleCall)cContentsAssignment_1_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cContentsTextPartParserRuleCall_1_1_1_0 = (RuleCall)cContentsAssignment_1_1_1.eContents().get(0);
		
		//TextOrMarkup:
		//	contents+=ParBreak (contents+=TextPart (contents+=MarkUp contents+=TextPart?)* | (contents+=MarkUp
		//	contents+=TextPart?)+);
		public ParserRule getRule() { return rule; }

		//contents+=ParBreak (contents+=TextPart (contents+=MarkUp contents+=TextPart?)* | (contents+=MarkUp
		//contents+=TextPart?)+)
		public Group getGroup() { return cGroup; }

		//contents+=ParBreak
		public Assignment getContentsAssignment_0() { return cContentsAssignment_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_0_0() { return cContentsParBreakParserRuleCall_0_0; }

		//contents+=TextPart (contents+=MarkUp contents+=TextPart?)* | (contents+=MarkUp contents+=TextPart?)+
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//contents+=TextPart (contents+=MarkUp contents+=TextPart?)*
		public Group getGroup_1_0() { return cGroup_1_0; }

		//contents+=TextPart
		public Assignment getContentsAssignment_1_0_0() { return cContentsAssignment_1_0_0; }

		//TextPart
		public RuleCall getContentsTextPartParserRuleCall_1_0_0_0() { return cContentsTextPartParserRuleCall_1_0_0_0; }

		//(contents+=MarkUp contents+=TextPart?)*
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }

		//contents+=MarkUp
		public Assignment getContentsAssignment_1_0_1_0() { return cContentsAssignment_1_0_1_0; }

		//MarkUp
		public RuleCall getContentsMarkUpParserRuleCall_1_0_1_0_0() { return cContentsMarkUpParserRuleCall_1_0_1_0_0; }

		//contents+=TextPart?
		public Assignment getContentsAssignment_1_0_1_1() { return cContentsAssignment_1_0_1_1; }

		//TextPart
		public RuleCall getContentsTextPartParserRuleCall_1_0_1_1_0() { return cContentsTextPartParserRuleCall_1_0_1_1_0; }

		//(contents+=MarkUp contents+=TextPart?)+
		public Group getGroup_1_1() { return cGroup_1_1; }

		//contents+=MarkUp
		public Assignment getContentsAssignment_1_1_0() { return cContentsAssignment_1_1_0; }

		//MarkUp
		public RuleCall getContentsMarkUpParserRuleCall_1_1_0_0() { return cContentsMarkUpParserRuleCall_1_1_0_0; }

		//contents+=TextPart?
		public Assignment getContentsAssignment_1_1_1() { return cContentsAssignment_1_1_1; }

		//TextPart
		public RuleCall getContentsTextPartParserRuleCall_1_1_1_0() { return cContentsTextPartParserRuleCall_1_1_1_0; }
	}

	public class TextOrMarkupLineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextOrMarkupLine");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cContentsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cContentsTextPartParserRuleCall_0_0_0 = (RuleCall)cContentsAssignment_0_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Assignment cContentsAssignment_0_1_0 = (Assignment)cGroup_0_1.eContents().get(0);
		private final RuleCall cContentsMarkUpParserRuleCall_0_1_0_0 = (RuleCall)cContentsAssignment_0_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cContentsTextPartParserRuleCall_0_1_1_0 = (RuleCall)cContentsAssignment_0_1_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cContentsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cContentsMarkUpParserRuleCall_1_0_0 = (RuleCall)cContentsAssignment_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cContentsTextPartParserRuleCall_1_1_0 = (RuleCall)cContentsAssignment_1_1.eContents().get(0);
		
		//TextOrMarkupLine:
		//	contents+=TextPart (contents+=MarkUp contents+=TextPart?)* | (contents+=MarkUp contents+=TextPart?)+;
		public ParserRule getRule() { return rule; }

		//contents+=TextPart (contents+=MarkUp contents+=TextPart?)* | (contents+=MarkUp contents+=TextPart?)+
		public Alternatives getAlternatives() { return cAlternatives; }

		//contents+=TextPart (contents+=MarkUp contents+=TextPart?)*
		public Group getGroup_0() { return cGroup_0; }

		//contents+=TextPart
		public Assignment getContentsAssignment_0_0() { return cContentsAssignment_0_0; }

		//TextPart
		public RuleCall getContentsTextPartParserRuleCall_0_0_0() { return cContentsTextPartParserRuleCall_0_0_0; }

		//(contents+=MarkUp contents+=TextPart?)*
		public Group getGroup_0_1() { return cGroup_0_1; }

		//contents+=MarkUp
		public Assignment getContentsAssignment_0_1_0() { return cContentsAssignment_0_1_0; }

		//MarkUp
		public RuleCall getContentsMarkUpParserRuleCall_0_1_0_0() { return cContentsMarkUpParserRuleCall_0_1_0_0; }

		//contents+=TextPart?
		public Assignment getContentsAssignment_0_1_1() { return cContentsAssignment_0_1_1; }

		//TextPart
		public RuleCall getContentsTextPartParserRuleCall_0_1_1_0() { return cContentsTextPartParserRuleCall_0_1_1_0; }

		//(contents+=MarkUp contents+=TextPart?)+
		public Group getGroup_1() { return cGroup_1; }

		//contents+=MarkUp
		public Assignment getContentsAssignment_1_0() { return cContentsAssignment_1_0; }

		//MarkUp
		public RuleCall getContentsMarkUpParserRuleCall_1_0_0() { return cContentsMarkUpParserRuleCall_1_0_0; }

		//contents+=TextPart?
		public Assignment getContentsAssignment_1_1() { return cContentsAssignment_1_1; }

		//TextPart
		public RuleCall getContentsTextPartParserRuleCall_1_1_0() { return cContentsTextPartParserRuleCall_1_1_0; }
	}

	public class MarkUpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MarkUp");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmphasizeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAnchorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOrderedListParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cUnorderedListParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cCodeBlockParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCodeRefParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cLinkParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cImageRefParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//MarkUp:
		//	Emphasize | Anchor | Ref | OrderedList | UnorderedList | CodeBlock | CodeRef | Link | ImageRef;
		public ParserRule getRule() { return rule; }

		//Emphasize | Anchor | Ref | OrderedList | UnorderedList | CodeBlock | CodeRef | Link | ImageRef
		public Alternatives getAlternatives() { return cAlternatives; }

		//Emphasize
		public RuleCall getEmphasizeParserRuleCall_0() { return cEmphasizeParserRuleCall_0; }

		//Anchor
		public RuleCall getAnchorParserRuleCall_1() { return cAnchorParserRuleCall_1; }

		//Ref
		public RuleCall getRefParserRuleCall_2() { return cRefParserRuleCall_2; }

		//OrderedList
		public RuleCall getOrderedListParserRuleCall_3() { return cOrderedListParserRuleCall_3; }

		//UnorderedList
		public RuleCall getUnorderedListParserRuleCall_4() { return cUnorderedListParserRuleCall_4; }

		//CodeBlock
		public RuleCall getCodeBlockParserRuleCall_5() { return cCodeBlockParserRuleCall_5; }

		//CodeRef
		public RuleCall getCodeRefParserRuleCall_6() { return cCodeRefParserRuleCall_6; }

		//Link
		public RuleCall getLinkParserRuleCall_7() { return cLinkParserRuleCall_7; }

		//ImageRef
		public RuleCall getImageRefParserRuleCall_8() { return cImageRefParserRuleCall_8; }
	}

	public class EmphasizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Emphasize");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEmphKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cContentsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupLineParserRuleCall_1_1_0 = (RuleCall)cContentsAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//Emphasize:
		//	"\\emph" ("[" contents+=TextOrMarkupLine "]");
		public ParserRule getRule() { return rule; }

		//"\\emph" ("[" contents+=TextOrMarkupLine "]")
		public Group getGroup() { return cGroup; }

		//"\\emph"
		public Keyword getEmphKeyword_0() { return cEmphKeyword_0; }

		//"[" contents+=TextOrMarkupLine "]"
		public Group getGroup_1() { return cGroup_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }

		//contents+=TextOrMarkupLine
		public Assignment getContentsAssignment_1_1() { return cContentsAssignment_1_1; }

		//TextOrMarkupLine
		public RuleCall getContentsTextOrMarkupLineParserRuleCall_1_1_0() { return cContentsTextOrMarkupLineParserRuleCall_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }
	}

	public class AnchorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Anchor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		
		//Anchor:
		//	"\\a" ":" name=ID ("[" "]")?;
		public ParserRule getRule() { return rule; }

		//"\\a" ":" name=ID ("[" "]")?
		public Group getGroup() { return cGroup; }

		//"\\a"
		public Keyword getAKeyword_0() { return cAKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("[" "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_1() { return cRightSquareBracketKeyword_3_1; }
	}

	public class RefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Ref");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRefAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cRefIdentifiableCrossReference_2_0 = (CrossReference)cRefAssignment_2.eContents().get(0);
		private final RuleCall cRefIdentifiableIDTerminalRuleCall_2_0_1 = (RuleCall)cRefIdentifiableCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContentsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cContentsTextOrMarkupLineParserRuleCall_4_0 = (RuleCall)cContentsAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Ref:
		//	"\\ref" ":" ref=[Identifiable] "[" contents+=TextOrMarkupLine "]";
		public ParserRule getRule() { return rule; }

		//"\\ref" ":" ref=[Identifiable] "[" contents+=TextOrMarkupLine "]"
		public Group getGroup() { return cGroup; }

		//"\\ref"
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//ref=[Identifiable]
		public Assignment getRefAssignment_2() { return cRefAssignment_2; }

		//[Identifiable]
		public CrossReference getRefIdentifiableCrossReference_2_0() { return cRefIdentifiableCrossReference_2_0; }

		//ID
		public RuleCall getRefIdentifiableIDTerminalRuleCall_2_0_1() { return cRefIdentifiableIDTerminalRuleCall_2_0_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//contents+=TextOrMarkupLine
		public Assignment getContentsAssignment_4() { return cContentsAssignment_4; }

		//TextOrMarkupLine
		public RuleCall getContentsTextOrMarkupLineParserRuleCall_4_0() { return cContentsTextOrMarkupLineParserRuleCall_4_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class OrderedListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OrderedList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cItemsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cItemsItemParserRuleCall_4_0 = (RuleCall)cItemsAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OrderedList:
		//	"\\ol" WS* "[" WS* //WS
		//	items+=Item+ "]";
		public ParserRule getRule() { return rule; }

		//"\\ol" WS* "[" WS* //WS
		//items+=Item+ "]"
		public Group getGroup() { return cGroup; }

		//"\\ol"
		public Keyword getOlKeyword_0() { return cOlKeyword_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//items+=Item+
		public Assignment getItemsAssignment_4() { return cItemsAssignment_4; }

		//Item
		public RuleCall getItemsItemParserRuleCall_4_0() { return cItemsItemParserRuleCall_4_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class UnorderedListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnorderedList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cItemsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cItemsItemParserRuleCall_4_0 = (RuleCall)cItemsAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//UnorderedList:
		//	"\\ul" WS* "[" WS* //WS
		//	items+=Item+ "]";
		public ParserRule getRule() { return rule; }

		//"\\ul" WS* "[" WS* //WS
		//items+=Item+ "]"
		public Group getGroup() { return cGroup; }

		//"\\ul"
		public Keyword getUlKeyword_0() { return cUlKeyword_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//items+=Item+
		public Assignment getItemsAssignment_4() { return cItemsAssignment_4; }

		//Item
		public RuleCall getItemsItemParserRuleCall_4_0() { return cItemsItemParserRuleCall_4_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class ItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Item");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cItemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cContentsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cContentsParBreakParserRuleCall_3_0_0 = (RuleCall)cContentsAssignment_3_0.eContents().get(0);
		private final Assignment cContentsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupLineParserRuleCall_3_1_0 = (RuleCall)cContentsAssignment_3_1.eContents().get(0);
		private final Assignment cContentsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_4_0 = (RuleCall)cContentsAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//Item:
		//	"\\item" WS* "[" (contents+=ParBreak? contents+=TextOrMarkupLine) contents+=TextOrMarkup* "]" WS*;
		public ParserRule getRule() { return rule; }

		//"\\item" WS* "[" (contents+=ParBreak? contents+=TextOrMarkupLine) contents+=TextOrMarkup* "]" WS*
		public Group getGroup() { return cGroup; }

		//"\\item"
		public Keyword getItemKeyword_0() { return cItemKeyword_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//contents+=ParBreak? contents+=TextOrMarkupLine
		public Group getGroup_3() { return cGroup_3; }

		//contents+=ParBreak?
		public Assignment getContentsAssignment_3_0() { return cContentsAssignment_3_0; }

		//ParBreak
		public RuleCall getContentsParBreakParserRuleCall_3_0_0() { return cContentsParBreakParserRuleCall_3_0_0; }

		//contents+=TextOrMarkupLine
		public Assignment getContentsAssignment_3_1() { return cContentsAssignment_3_1; }

		//TextOrMarkupLine
		public RuleCall getContentsTextOrMarkupLineParserRuleCall_3_1_0() { return cContentsTextOrMarkupLineParserRuleCall_3_1_0; }

		//contents+=TextOrMarkup*
		public Assignment getContentsAssignment_4() { return cContentsAssignment_4; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_4_0() { return cContentsTextOrMarkupParserRuleCall_4_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }

		//WS*
		public RuleCall getWSTerminalRuleCall_6() { return cWSTerminalRuleCall_6; }
	}

	public class CodeRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CodeRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCodeRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cElementJvmIdentifyableElementCrossReference_2_0 = (CrossReference)cElementAssignment_2.eContents().get(0);
		private final RuleCall cElementJvmIdentifyableElementTextParserRuleCall_2_0_1 = (RuleCall)cElementJvmIdentifyableElementCrossReference_2_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//CodeRef:
		//	"\\codeRef" "[" element=[types::JvmIdentifyableElement|Text] "]";
		public ParserRule getRule() { return rule; }

		//"\\codeRef" "[" element=[types::JvmIdentifyableElement|Text] "]"
		public Group getGroup() { return cGroup; }

		//"\\codeRef"
		public Keyword getCodeRefKeyword_0() { return cCodeRefKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//element=[types::JvmIdentifyableElement|Text]
		public Assignment getElementAssignment_2() { return cElementAssignment_2; }

		//[types::JvmIdentifyableElement|Text]
		public CrossReference getElementJvmIdentifyableElementCrossReference_2_0() { return cElementJvmIdentifyableElementCrossReference_2_0; }

		//Text
		public RuleCall getElementJvmIdentifyableElementTextParserRuleCall_2_0_1() { return cElementJvmIdentifyableElementTextParserRuleCall_2_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cUrlAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUrlTextParserRuleCall_2_0 = (RuleCall)cUrlAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTextAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTextTextParserRuleCall_5_0 = (RuleCall)cTextAssignment_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Link:
		//	"\\link" "[" url=Text "]" "[" text=Text "]";
		public ParserRule getRule() { return rule; }

		//"\\link" "[" url=Text "]" "[" text=Text "]"
		public Group getGroup() { return cGroup; }

		//"\\link"
		public Keyword getLinkKeyword_0() { return cLinkKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//url=Text
		public Assignment getUrlAssignment_2() { return cUrlAssignment_2; }

		//Text
		public RuleCall getUrlTextParserRuleCall_2_0() { return cUrlTextParserRuleCall_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }

		//text=Text
		public Assignment getTextAssignment_5() { return cTextAssignment_5; }

		//Text
		public RuleCall getTextTextParserRuleCall_5_0() { return cTextTextParserRuleCall_5_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
	}

	public class ImageRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImageRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImgKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathTextParserRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cClazzAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cClazzTextParserRuleCall_6_0 = (RuleCall)cClazzAssignment_6.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cStyleAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cStyleTextParserRuleCall_9_0 = (RuleCall)cStyleAssignment_9.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftSquareBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cCaptionAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cCaptionTextParserRuleCall_12_0 = (RuleCall)cCaptionAssignment_12.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//ImageRef:
		//	"\\img" (":" name=ID)? "[" path=Text / *TODO make it a crossreference to images * / "]" "[" clazz=Text "]" "["
		//	style=Text "]" "[" caption=Text "]";
		public ParserRule getRule() { return rule; }

		//"\\img" (":" name=ID)? "[" path=Text / *TODO make it a crossreference to images * / "]" "[" clazz=Text "]" "[" style=Text
		//"]" "[" caption=Text "]"
		public Group getGroup() { return cGroup; }

		//"\\img"
		public Keyword getImgKeyword_0() { return cImgKeyword_0; }

		//(":" name=ID)?
		public Group getGroup_1() { return cGroup_1; }

		//":"
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//path=Text
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }

		//Text
		public RuleCall getPathTextParserRuleCall_3_0() { return cPathTextParserRuleCall_3_0; }

		/// *TODO make it a crossreference to images * / "]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }

		//"["
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }

		//clazz=Text
		public Assignment getClazzAssignment_6() { return cClazzAssignment_6; }

		//Text
		public RuleCall getClazzTextParserRuleCall_6_0() { return cClazzTextParserRuleCall_6_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }

		//"["
		public Keyword getLeftSquareBracketKeyword_8() { return cLeftSquareBracketKeyword_8; }

		//style=Text
		public Assignment getStyleAssignment_9() { return cStyleAssignment_9; }

		//Text
		public RuleCall getStyleTextParserRuleCall_9_0() { return cStyleTextParserRuleCall_9_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_10() { return cRightSquareBracketKeyword_10; }

		//"["
		public Keyword getLeftSquareBracketKeyword_11() { return cLeftSquareBracketKeyword_11; }

		//caption=Text
		public Assignment getCaptionAssignment_12() { return cCaptionAssignment_12; }

		//Text
		public RuleCall getCaptionTextParserRuleCall_12_0() { return cCaptionTextParserRuleCall_12_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_13() { return cRightSquareBracketKeyword_13; }
	}

	public class CodeBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CodeBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cLanguageAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLanguageIDTerminalRuleCall_1_1_0 = (RuleCall)cLanguageAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cParBreakParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Assignment cContentsAssignment_5_0_0 = (Assignment)cGroup_5_0.eContents().get(0);
		private final RuleCall cContentsCodeParserRuleCall_5_0_0_0 = (RuleCall)cContentsAssignment_5_0_0.eContents().get(0);
		private final Group cGroup_5_0_1 = (Group)cGroup_5_0.eContents().get(1);
		private final Assignment cContentsAssignment_5_0_1_0 = (Assignment)cGroup_5_0_1.eContents().get(0);
		private final RuleCall cContentsMarkupInCodeParserRuleCall_5_0_1_0_0 = (RuleCall)cContentsAssignment_5_0_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_5_0_1_1 = (Assignment)cGroup_5_0_1.eContents().get(1);
		private final RuleCall cContentsCodeParserRuleCall_5_0_1_1_0 = (RuleCall)cContentsAssignment_5_0_1_1.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Assignment cContentsAssignment_5_1_0 = (Assignment)cGroup_5_1.eContents().get(0);
		private final RuleCall cContentsMarkupInCodeParserRuleCall_5_1_0_0 = (RuleCall)cContentsAssignment_5_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cContentsCodeParserRuleCall_5_1_1_0 = (RuleCall)cContentsAssignment_5_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//CodeBlock:
		//	"\\code" ("[" language=ID "]")? WS* ParBreak? "[" (contents+=Code (contents+=MarkupInCode contents+=Code?)* |
		//	(contents+=MarkupInCode contents+=Code?)+) "]";
		public ParserRule getRule() { return rule; }

		//"\\code" ("[" language=ID "]")? WS* ParBreak? "[" (contents+=Code (contents+=MarkupInCode contents+=Code?)* |
		//(contents+=MarkupInCode contents+=Code?)+) "]"
		public Group getGroup() { return cGroup; }

		//"\\code"
		public Keyword getCodeKeyword_0() { return cCodeKeyword_0; }

		//("[" language=ID "]")?
		public Group getGroup_1() { return cGroup_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }

		//language=ID
		public Assignment getLanguageAssignment_1_1() { return cLanguageAssignment_1_1; }

		//ID
		public RuleCall getLanguageIDTerminalRuleCall_1_1_0() { return cLanguageIDTerminalRuleCall_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//ParBreak?
		public RuleCall getParBreakParserRuleCall_3() { return cParBreakParserRuleCall_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }

		//contents+=Code (contents+=MarkupInCode contents+=Code?)* | (contents+=MarkupInCode contents+=Code?)+
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//contents+=Code (contents+=MarkupInCode contents+=Code?)*
		public Group getGroup_5_0() { return cGroup_5_0; }

		//contents+=Code
		public Assignment getContentsAssignment_5_0_0() { return cContentsAssignment_5_0_0; }

		//Code
		public RuleCall getContentsCodeParserRuleCall_5_0_0_0() { return cContentsCodeParserRuleCall_5_0_0_0; }

		//(contents+=MarkupInCode contents+=Code?)*
		public Group getGroup_5_0_1() { return cGroup_5_0_1; }

		//contents+=MarkupInCode
		public Assignment getContentsAssignment_5_0_1_0() { return cContentsAssignment_5_0_1_0; }

		//MarkupInCode
		public RuleCall getContentsMarkupInCodeParserRuleCall_5_0_1_0_0() { return cContentsMarkupInCodeParserRuleCall_5_0_1_0_0; }

		//contents+=Code?
		public Assignment getContentsAssignment_5_0_1_1() { return cContentsAssignment_5_0_1_1; }

		//Code
		public RuleCall getContentsCodeParserRuleCall_5_0_1_1_0() { return cContentsCodeParserRuleCall_5_0_1_1_0; }

		//(contents+=MarkupInCode contents+=Code?)+
		public Group getGroup_5_1() { return cGroup_5_1; }

		//contents+=MarkupInCode
		public Assignment getContentsAssignment_5_1_0() { return cContentsAssignment_5_1_0; }

		//MarkupInCode
		public RuleCall getContentsMarkupInCodeParserRuleCall_5_1_0_0() { return cContentsMarkupInCodeParserRuleCall_5_1_0_0; }

		//contents+=Code?
		public Assignment getContentsAssignment_5_1_1() { return cContentsAssignment_5_1_1; }

		//Code
		public RuleCall getContentsCodeParserRuleCall_5_1_1_0() { return cContentsCodeParserRuleCall_5_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
	}

	public class ParBreakElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParBreak");
		private final Assignment cCAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cCMULTI_NLTerminalRuleCall_0 = (RuleCall)cCAssignment.eContents().get(0);
		
		//ParBreak:
		//	c=MULTI_NL;
		public ParserRule getRule() { return rule; }

		//c=MULTI_NL
		public Assignment getCAssignment() { return cCAssignment; }

		//MULTI_NL
		public RuleCall getCMULTI_NLTerminalRuleCall_0() { return cCMULTI_NLTerminalRuleCall_0; }
	}

	public class TextPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextPart");
		private final Assignment cTextAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTextTextParserRuleCall_0 = (RuleCall)cTextAssignment.eContents().get(0);
		
		//TextPart:
		//	text=Text;
		public ParserRule getRule() { return rule; }

		//text=Text
		public Assignment getTextAssignment() { return cTextAssignment; }

		//Text
		public RuleCall getTextTextParserRuleCall_0() { return cTextTextParserRuleCall_0; }
	}

	public class TextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Text");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cANY_OTHERTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final Keyword cReverseSolidusLeftSquareBracketKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cReverseSolidusRightSquareBracketKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//Text returns ecore::EString:
		//	(ID | WS | ANY_OTHER | "\\[" | "\\]" | ":")+;
		public ParserRule getRule() { return rule; }

		//(ID | WS | ANY_OTHER | "\\[" | "\\]" | ":")+
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//ANY_OTHER
		public RuleCall getANY_OTHERTerminalRuleCall_2() { return cANY_OTHERTerminalRuleCall_2; }

		//"\\["
		public Keyword getReverseSolidusLeftSquareBracketKeyword_3() { return cReverseSolidusLeftSquareBracketKeyword_3; }

		//"\\]"
		public Keyword getReverseSolidusRightSquareBracketKeyword_4() { return cReverseSolidusRightSquareBracketKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
	}

	public class CodeTextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CodeText");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMULTI_NLTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cANY_OTHERTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final Keyword cReverseSolidusLeftSquareBracketKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cReverseSolidusRightSquareBracketKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		
		//CodeText returns ecore::EString:
		//	(ID | MULTI_NL | WS | ANY_OTHER | "\\[" | "\\]" | ":")+;
		public ParserRule getRule() { return rule; }

		//(ID | MULTI_NL | WS | ANY_OTHER | "\\[" | "\\]" | ":")+
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_1() { return cMULTI_NLTerminalRuleCall_1; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//ANY_OTHER
		public RuleCall getANY_OTHERTerminalRuleCall_3() { return cANY_OTHERTerminalRuleCall_3; }

		//"\\["
		public Keyword getReverseSolidusLeftSquareBracketKeyword_4() { return cReverseSolidusLeftSquareBracketKeyword_4; }

		//"\\]"
		public Keyword getReverseSolidusRightSquareBracketKeyword_5() { return cReverseSolidusRightSquareBracketKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
	}

	public class MarkupInCodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MarkupInCode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmphasizeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAnchorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//MarkupInCode:
		//	Emphasize | Anchor | Ref;
		public ParserRule getRule() { return rule; }

		//Emphasize | Anchor | Ref
		public Alternatives getAlternatives() { return cAlternatives; }

		//Emphasize
		public RuleCall getEmphasizeParserRuleCall_0() { return cEmphasizeParserRuleCall_0; }

		//Anchor
		public RuleCall getAnchorParserRuleCall_1() { return cAnchorParserRuleCall_1; }

		//Ref
		public RuleCall getRefParserRuleCall_2() { return cRefParserRuleCall_2; }
	}

	public class CodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Code");
		private final Assignment cContentsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cContentsCodeTextParserRuleCall_0 = (RuleCall)cContentsAssignment.eContents().get(0);
		
		//Code:
		//	contents=CodeText;
		public ParserRule getRule() { return rule; }

		//contents=CodeText
		public Assignment getContentsAssignment() { return cContentsAssignment; }

		//CodeText
		public RuleCall getContentsCodeTextParserRuleCall_0() { return cContentsCodeTextParserRuleCall_0; }
	}
	
	
	private DocumentElements pDocument;
	private ChapterElements pChapter;
	private SectionElements pSection;
	private SubSectionElements pSubSection;
	private Section3Elements pSection3;
	private Section4Elements pSection4;
	private IdentifiableElements pIdentifiable;
	private TextOrMarkupElements pTextOrMarkup;
	private TextOrMarkupLineElements pTextOrMarkupLine;
	private MarkUpElements pMarkUp;
	private EmphasizeElements pEmphasize;
	private AnchorElements pAnchor;
	private RefElements pRef;
	private OrderedListElements pOrderedList;
	private UnorderedListElements pUnorderedList;
	private ItemElements pItem;
	private CodeRefElements pCodeRef;
	private LinkElements pLink;
	private ImageRefElements pImageRef;
	private CodeBlockElements pCodeBlock;
	private ParBreakElements pParBreak;
	private TextPartElements pTextPart;
	private TextElements pText;
	private CodeTextElements pCodeText;
	private MarkupInCodeElements pMarkupInCode;
	private CodeElements pCode;
	private TerminalRule tID;
	private TerminalRule tSL_COMMENT;
	private TerminalRule tMULTI_NL;
	private TerminalRule tWS;
	private TerminalRule tANY_OTHER;
	
	private final GrammarProvider grammarProvider;

	@Inject
	public XDocGrammarAccess(GrammarProvider grammarProvider) {
		this.grammarProvider = grammarProvider;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	
	/// *Foo:
	//	doc=Document;* /Document:
	//	{Document} ((contents+=ParBreak? chapters+=Chapter)+ | (contents+=ParBreak? sections+=Section)+ | (contents+=ParBreak?
	//	subsections+=SubSection)+) contents+=ParBreak?;
	public DocumentElements getDocumentAccess() {
		return (pDocument != null) ? pDocument : (pDocument = new DocumentElements());
	}
	
	public ParserRule getDocumentRule() {
		return getDocumentAccess().getRule();
	}

	//Chapter:
	//	"\\chapter" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
	//	contents+=TextOrMarkup*)? (contents+=ParBreak? contents+=Section)*;
	public ChapterElements getChapterAccess() {
		return (pChapter != null) ? pChapter : (pChapter = new ChapterElements());
	}
	
	public ParserRule getChapterRule() {
		return getChapterAccess().getRule();
	}

	//Section:
	//	"\\section" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
	//	contents+=TextOrMarkup*)? (contents+=ParBreak? contents+=SubSection)*;
	public SectionElements getSectionAccess() {
		return (pSection != null) ? pSection : (pSection = new SectionElements());
	}
	
	public ParserRule getSectionRule() {
		return getSectionAccess().getRule();
	}

	//SubSection:
	//	"\\subsection" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
	//	contents+=TextOrMarkup*)? (contents+=ParBreak? contents+=Section3)*;
	public SubSectionElements getSubSectionAccess() {
		return (pSubSection != null) ? pSubSection : (pSubSection = new SubSectionElements());
	}
	
	public ParserRule getSubSectionRule() {
		return getSubSectionAccess().getRule();
	}

	//Section3:
	//	"\\section3" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
	//	contents+=TextOrMarkup*)? (contents+=ParBreak? contents+=Section4)*;
	public Section3Elements getSection3Access() {
		return (pSection3 != null) ? pSection3 : (pSection3 = new Section3Elements());
	}
	
	public ParserRule getSection3Rule() {
		return getSection3Access().getRule();
	}

	//Section4:
	//	"\\section4" (":" name=ID)? "[" title=TextOrMarkupLine "]" WS* ((contents+=ParBreak contents+=TextOrMarkupLine)
	//	contents+=TextOrMarkup*)?;
	public Section4Elements getSection4Access() {
		return (pSection4 != null) ? pSection4 : (pSection4 = new Section4Elements());
	}
	
	public ParserRule getSection4Rule() {
		return getSection4Access().getRule();
	}

	//Identifiable:
	//	Chapter | Section | SubSection | Section3 | Section4 | Anchor;
	public IdentifiableElements getIdentifiableAccess() {
		return (pIdentifiable != null) ? pIdentifiable : (pIdentifiable = new IdentifiableElements());
	}
	
	public ParserRule getIdentifiableRule() {
		return getIdentifiableAccess().getRule();
	}

	//TextOrMarkup:
	//	contents+=ParBreak (contents+=TextPart (contents+=MarkUp contents+=TextPart?)* | (contents+=MarkUp
	//	contents+=TextPart?)+);
	public TextOrMarkupElements getTextOrMarkupAccess() {
		return (pTextOrMarkup != null) ? pTextOrMarkup : (pTextOrMarkup = new TextOrMarkupElements());
	}
	
	public ParserRule getTextOrMarkupRule() {
		return getTextOrMarkupAccess().getRule();
	}

	//TextOrMarkupLine:
	//	contents+=TextPart (contents+=MarkUp contents+=TextPart?)* | (contents+=MarkUp contents+=TextPart?)+;
	public TextOrMarkupLineElements getTextOrMarkupLineAccess() {
		return (pTextOrMarkupLine != null) ? pTextOrMarkupLine : (pTextOrMarkupLine = new TextOrMarkupLineElements());
	}
	
	public ParserRule getTextOrMarkupLineRule() {
		return getTextOrMarkupLineAccess().getRule();
	}

	//MarkUp:
	//	Emphasize | Anchor | Ref | OrderedList | UnorderedList | CodeBlock | CodeRef | Link | ImageRef;
	public MarkUpElements getMarkUpAccess() {
		return (pMarkUp != null) ? pMarkUp : (pMarkUp = new MarkUpElements());
	}
	
	public ParserRule getMarkUpRule() {
		return getMarkUpAccess().getRule();
	}

	//Emphasize:
	//	"\\emph" ("[" contents+=TextOrMarkupLine "]");
	public EmphasizeElements getEmphasizeAccess() {
		return (pEmphasize != null) ? pEmphasize : (pEmphasize = new EmphasizeElements());
	}
	
	public ParserRule getEmphasizeRule() {
		return getEmphasizeAccess().getRule();
	}

	//Anchor:
	//	"\\a" ":" name=ID ("[" "]")?;
	public AnchorElements getAnchorAccess() {
		return (pAnchor != null) ? pAnchor : (pAnchor = new AnchorElements());
	}
	
	public ParserRule getAnchorRule() {
		return getAnchorAccess().getRule();
	}

	//Ref:
	//	"\\ref" ":" ref=[Identifiable] "[" contents+=TextOrMarkupLine "]";
	public RefElements getRefAccess() {
		return (pRef != null) ? pRef : (pRef = new RefElements());
	}
	
	public ParserRule getRefRule() {
		return getRefAccess().getRule();
	}

	//OrderedList:
	//	"\\ol" WS* "[" WS* //WS
	//	items+=Item+ "]";
	public OrderedListElements getOrderedListAccess() {
		return (pOrderedList != null) ? pOrderedList : (pOrderedList = new OrderedListElements());
	}
	
	public ParserRule getOrderedListRule() {
		return getOrderedListAccess().getRule();
	}

	//UnorderedList:
	//	"\\ul" WS* "[" WS* //WS
	//	items+=Item+ "]";
	public UnorderedListElements getUnorderedListAccess() {
		return (pUnorderedList != null) ? pUnorderedList : (pUnorderedList = new UnorderedListElements());
	}
	
	public ParserRule getUnorderedListRule() {
		return getUnorderedListAccess().getRule();
	}

	//Item:
	//	"\\item" WS* "[" (contents+=ParBreak? contents+=TextOrMarkupLine) contents+=TextOrMarkup* "]" WS*;
	public ItemElements getItemAccess() {
		return (pItem != null) ? pItem : (pItem = new ItemElements());
	}
	
	public ParserRule getItemRule() {
		return getItemAccess().getRule();
	}

	//CodeRef:
	//	"\\codeRef" "[" element=[types::JvmIdentifyableElement|Text] "]";
	public CodeRefElements getCodeRefAccess() {
		return (pCodeRef != null) ? pCodeRef : (pCodeRef = new CodeRefElements());
	}
	
	public ParserRule getCodeRefRule() {
		return getCodeRefAccess().getRule();
	}

	//Link:
	//	"\\link" "[" url=Text "]" "[" text=Text "]";
	public LinkElements getLinkAccess() {
		return (pLink != null) ? pLink : (pLink = new LinkElements());
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}

	//ImageRef:
	//	"\\img" (":" name=ID)? "[" path=Text / *TODO make it a crossreference to images * / "]" "[" clazz=Text "]" "["
	//	style=Text "]" "[" caption=Text "]";
	public ImageRefElements getImageRefAccess() {
		return (pImageRef != null) ? pImageRef : (pImageRef = new ImageRefElements());
	}
	
	public ParserRule getImageRefRule() {
		return getImageRefAccess().getRule();
	}

	//CodeBlock:
	//	"\\code" ("[" language=ID "]")? WS* ParBreak? "[" (contents+=Code (contents+=MarkupInCode contents+=Code?)* |
	//	(contents+=MarkupInCode contents+=Code?)+) "]";
	public CodeBlockElements getCodeBlockAccess() {
		return (pCodeBlock != null) ? pCodeBlock : (pCodeBlock = new CodeBlockElements());
	}
	
	public ParserRule getCodeBlockRule() {
		return getCodeBlockAccess().getRule();
	}

	//ParBreak:
	//	c=MULTI_NL;
	public ParBreakElements getParBreakAccess() {
		return (pParBreak != null) ? pParBreak : (pParBreak = new ParBreakElements());
	}
	
	public ParserRule getParBreakRule() {
		return getParBreakAccess().getRule();
	}

	//TextPart:
	//	text=Text;
	public TextPartElements getTextPartAccess() {
		return (pTextPart != null) ? pTextPart : (pTextPart = new TextPartElements());
	}
	
	public ParserRule getTextPartRule() {
		return getTextPartAccess().getRule();
	}

	//Text returns ecore::EString:
	//	(ID | WS | ANY_OTHER | "\\[" | "\\]" | ":")+;
	public TextElements getTextAccess() {
		return (pText != null) ? pText : (pText = new TextElements());
	}
	
	public ParserRule getTextRule() {
		return getTextAccess().getRule();
	}

	//CodeText returns ecore::EString:
	//	(ID | MULTI_NL | WS | ANY_OTHER | "\\[" | "\\]" | ":")+;
	public CodeTextElements getCodeTextAccess() {
		return (pCodeText != null) ? pCodeText : (pCodeText = new CodeTextElements());
	}
	
	public ParserRule getCodeTextRule() {
		return getCodeTextAccess().getRule();
	}

	//MarkupInCode:
	//	Emphasize | Anchor | Ref;
	public MarkupInCodeElements getMarkupInCodeAccess() {
		return (pMarkupInCode != null) ? pMarkupInCode : (pMarkupInCode = new MarkupInCodeElements());
	}
	
	public ParserRule getMarkupInCodeRule() {
		return getMarkupInCodeAccess().getRule();
	}

	//Code:
	//	contents=CodeText;
	public CodeElements getCodeAccess() {
		return (pCode != null) ? pCode : (pCode = new CodeElements());
	}
	
	public ParserRule getCodeRule() {
		return getCodeAccess().getRule();
	}

	//terminal ID:
	//	("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return (tID != null) ? tID : (tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID"));
	} 

	//terminal SL_COMMENT:
	//	"%%" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal MULTI_NL:
	//	("\r"? "\n") (" " | "\t")* ("\r"? "\n") WS*;
	public TerminalRule getMULTI_NLRule() {
		return (tMULTI_NL != null) ? tMULTI_NL : (tMULTI_NL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "MULTI_NL"));
	} 

	//terminal WS:
	//	" " | "\t" | "\r" | "\n";
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return (tANY_OTHER != null) ? tANY_OTHER : (tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ANY_OTHER"));
	} 
}
