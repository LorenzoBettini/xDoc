/*
* generated by Xtext
*/
grammar InternalXdoc;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.xtext.xdoc.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.xdoc.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.xtext.xdoc.services.XdocGrammarAccess;

}

@parser::members {

 	private XdocGrammarAccess grammarAccess;
 	
    public InternalXdocParser(TokenStream input, IAstFactory factory, XdocGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "XdocFile";	
   	}
   	
   	@Override
   	protected XdocGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleXdocFile
entryRuleXdocFile returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getXdocFileRule(), currentNode); }
	 iv_ruleXdocFile=ruleXdocFile 
	 { $current=$iv_ruleXdocFile.current; } 
	 EOF 
;

// Rule XdocFile
ruleXdocFile returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getXdocFileAccess().getXdocFileAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getXdocFileAccess().getXdocFileAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(this_WS_1=RULE_WS
    { 
    createLeafNode(this_WS_1, grammarAccess.getXdocFileAccess().getWSTerminalRuleCall_1(), null); 
    }
)?(this_MULTI_NL_2=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_2, grammarAccess.getXdocFileAccess().getMULTI_NLTerminalRuleCall_2(), null); 
    }
)?((
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getXdocFileAccess().getMainSectionDocumentParserRuleCall_3_0_0_0(), currentNode); 
	    }
		lv_mainSection_3_1=ruleDocument		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getXdocFileRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"mainSection",
	        		lv_mainSection_3_1, 
	        		"Document", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getXdocFileAccess().getMainSectionChapterParserRuleCall_3_0_0_1(), currentNode); 
	    }
		lv_mainSection_3_2=ruleChapter		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getXdocFileRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"mainSection",
	        		lv_mainSection_3_2, 
	        		"Chapter", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getXdocFileAccess().getMainSectionSectionParserRuleCall_3_0_0_2(), currentNode); 
	    }
		lv_mainSection_3_3=ruleSection		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getXdocFileRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"mainSection",
	        		lv_mainSection_3_3, 
	        		"Section", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getXdocFileAccess().getMainSectionSection2ParserRuleCall_3_0_0_3(), currentNode); 
	    }
		lv_mainSection_3_4=ruleSection2		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getXdocFileRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"mainSection",
	        		lv_mainSection_3_4, 
	        		"Section2", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
)(this_MULTI_NL_4=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_4, grammarAccess.getXdocFileAccess().getMULTI_NLTerminalRuleCall_3_1(), null); 
    }
)?)?)
;





// Entry rule entryRuleDocument
entryRuleDocument returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDocumentRule(), currentNode); }
	 iv_ruleDocument=ruleDocument 
	 { $current=$iv_ruleDocument.current; } 
	 EOF 
;

// Rule Document
ruleDocument returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='document[' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getDocumentAccess().getDocumentKeyword_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDocumentAccess().getTitleTextOrMarkupParserRuleCall_1_0(), currentNode); 
	    }
		lv_title_1_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDocumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_1_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	otherlv_2=']' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getDocumentAccess().getRightSquareBracketKeyword_2(), null);
    }
(this_MULTI_NL_3=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_3, grammarAccess.getDocumentAccess().getMULTI_NLTerminalRuleCall_3_0(), null); 
    }
	otherlv_4='subtitle[' 
    {
    	createLeafNode(otherlv_4, grammarAccess.getDocumentAccess().getSubtitleKeyword_3_1(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDocumentAccess().getSubtitleTextOrMarkupParserRuleCall_3_2_0(), currentNode); 
	    }
		lv_subtitle_5_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDocumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"subtitle",
	        		lv_subtitle_5_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	otherlv_6=']' 
    {
    	createLeafNode(otherlv_6, grammarAccess.getDocumentAccess().getRightSquareBracketKeyword_3_3(), null);
    }
)?(this_MULTI_NL_7=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_7, grammarAccess.getDocumentAccess().getMULTI_NLTerminalRuleCall_4_0(), null); 
    }
	otherlv_8='authors[' 
    {
    	createLeafNode(otherlv_8, grammarAccess.getDocumentAccess().getAuthorsKeyword_4_1(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDocumentAccess().getAuthorsTextOrMarkupParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_authors_9_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDocumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"authors",
	        		lv_authors_9_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	otherlv_10=']' 
    {
    	createLeafNode(otherlv_10, grammarAccess.getDocumentAccess().getRightSquareBracketKeyword_4_3(), null);
    }
)?(this_MULTI_NL_11=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_11, grammarAccess.getDocumentAccess().getMULTI_NLTerminalRuleCall_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDocumentAccess().getLangDefsLangDefParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_langDefs_12_0=ruleLangDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDocumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"langDefs",
	        		lv_langDefs_12_0, 
	        		"LangDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(this_MULTI_NL_13=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_13, grammarAccess.getDocumentAccess().getMULTI_NLTerminalRuleCall_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDocumentAccess().getChaptersChapterParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_chapters_14_0=ruleChapter		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDocumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"chapters",
	        		lv_chapters_14_0, 
	        		"Chapter", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleChapter
entryRuleChapter returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getChapterRule(), currentNode); }
	 iv_ruleChapter=ruleChapter 
	 { $current=$iv_ruleChapter.current; } 
	 EOF 
;

// Rule Chapter
ruleChapter returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getChapterAccess().getChapterRefParserRuleCall_0(), currentNode); 
    }
    this_ChapterRef_0=ruleChapterRef
    { 
        $current = $this_ChapterRef_0.current; 
        currentNode = currentNode.getParent();
    }

    |(((	otherlv_1='chapter:' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getChapterAccess().getChapterKeyword_1_0_0_0(), null);
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(lv_name_2_0, grammarAccess.getChapterAccess().getNameIDTerminalRuleCall_1_0_0_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getChapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_3='[' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getChapterAccess().getLeftSquareBracketKeyword_1_0_0_2(), null);
    }
)
    |	otherlv_4='chapter[' 
    {
    	createLeafNode(otherlv_4, grammarAccess.getChapterAccess().getChapterKeyword_1_0_1(), null);
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getChapterAccess().getTitleTextOrMarkupParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_title_5_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getChapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_5_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	otherlv_6=']' 
    {
    	createLeafNode(otherlv_6, grammarAccess.getChapterAccess().getRightSquareBracketKeyword_1_2(), null);
    }
(this_MULTI_NL_7=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_7, grammarAccess.getChapterAccess().getMULTI_NLTerminalRuleCall_1_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getChapterAccess().getContentsTextOrMarkupParserRuleCall_1_3_1_0(), currentNode); 
	    }
		lv_contents_8_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getChapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_8_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(this_MULTI_NL_9=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_9, grammarAccess.getChapterAccess().getMULTI_NLTerminalRuleCall_1_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getChapterAccess().getSubSectionsSectionParserRuleCall_1_4_1_0(), currentNode); 
	    }
		lv_subSections_10_0=ruleSection		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getChapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"subSections",
	        		lv_subSections_10_0, 
	        		"Section", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*))
;





// Entry rule entryRuleChapterRef
entryRuleChapterRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getChapterRefRule(), currentNode); }
	 iv_ruleChapterRef=ruleChapterRef 
	 { $current=$iv_ruleChapterRef.current; } 
	 EOF 
;

// Rule ChapterRef
ruleChapterRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='chapter-ref[' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getChapterRefAccess().getChapterRefKeyword_0(), null);
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getChapterRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	otherlv_1=RULE_ID
	{
		createLeafNode(otherlv_1, grammarAccess.getChapterRefAccess().getChapterChapterCrossReference_1_0(), "chapter"); 
	}

)
)	otherlv_2=']' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getChapterRefAccess().getRightSquareBracketKeyword_2(), null);
    }
)
;





// Entry rule entryRuleSection
entryRuleSection returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSectionRule(), currentNode); }
	 iv_ruleSection=ruleSection 
	 { $current=$iv_ruleSection.current; } 
	 EOF 
;

// Rule Section
ruleSection returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSectionAccess().getSectionRefParserRuleCall_0(), currentNode); 
    }
    this_SectionRef_0=ruleSectionRef
    { 
        $current = $this_SectionRef_0.current; 
        currentNode = currentNode.getParent();
    }

    |(((	otherlv_1='section:' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getSectionAccess().getSectionKeyword_1_0_0_0(), null);
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(lv_name_2_0, grammarAccess.getSectionAccess().getNameIDTerminalRuleCall_1_0_0_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_3='[' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getSectionAccess().getLeftSquareBracketKeyword_1_0_0_2(), null);
    }
)
    |	otherlv_4='section[' 
    {
    	createLeafNode(otherlv_4, grammarAccess.getSectionAccess().getSectionKeyword_1_0_1(), null);
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionAccess().getTitleTextOrMarkupParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_title_5_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_5_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	otherlv_6=']' 
    {
    	createLeafNode(otherlv_6, grammarAccess.getSectionAccess().getRightSquareBracketKeyword_1_2(), null);
    }
(this_MULTI_NL_7=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_7, grammarAccess.getSectionAccess().getMULTI_NLTerminalRuleCall_1_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionAccess().getContentsTextOrMarkupParserRuleCall_1_3_1_0(), currentNode); 
	    }
		lv_contents_8_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_8_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(this_MULTI_NL_9=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_9, grammarAccess.getSectionAccess().getMULTI_NLTerminalRuleCall_1_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionAccess().getSubSectionsSection2ParserRuleCall_1_4_1_0(), currentNode); 
	    }
		lv_subSections_10_0=ruleSection2		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"subSections",
	        		lv_subSections_10_0, 
	        		"Section2", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*))
;





// Entry rule entryRuleSectionRef
entryRuleSectionRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSectionRefRule(), currentNode); }
	 iv_ruleSectionRef=ruleSectionRef 
	 { $current=$iv_ruleSectionRef.current; } 
	 EOF 
;

// Rule SectionRef
ruleSectionRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='section-ref[' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getSectionRefAccess().getSectionRefKeyword_0(), null);
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	otherlv_1=RULE_ID
	{
		createLeafNode(otherlv_1, grammarAccess.getSectionRefAccess().getSectionSectionCrossReference_1_0(), "section"); 
	}

)
)	otherlv_2=']' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getSectionRefAccess().getRightSquareBracketKeyword_2(), null);
    }
)
;





// Entry rule entryRuleSection2
entryRuleSection2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSection2Rule(), currentNode); }
	 iv_ruleSection2=ruleSection2 
	 { $current=$iv_ruleSection2.current; } 
	 EOF 
;

// Rule Section2
ruleSection2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((	otherlv_0='section2:' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getSection2Access().getSection2Keyword_0_0_0(), null);
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(lv_name_1_0, grammarAccess.getSection2Access().getNameIDTerminalRuleCall_0_0_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_2='[' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getSection2Access().getLeftSquareBracketKeyword_0_0_2(), null);
    }
)
    |	otherlv_3='section2[' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getSection2Access().getSection2Keyword_0_1(), null);
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection2Access().getTitleTextOrMarkupParserRuleCall_1_0(), currentNode); 
	    }
		lv_title_4_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_4_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	otherlv_5=']' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getSection2Access().getRightSquareBracketKeyword_2(), null);
    }
(this_MULTI_NL_6=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_6, grammarAccess.getSection2Access().getMULTI_NLTerminalRuleCall_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection2Access().getContentsTextOrMarkupParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_contents_7_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_7_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(this_MULTI_NL_8=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_8, grammarAccess.getSection2Access().getMULTI_NLTerminalRuleCall_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection2Access().getSubSectionsSection3ParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_subSections_9_0=ruleSection3		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"subSections",
	        		lv_subSections_9_0, 
	        		"Section3", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleSection3
entryRuleSection3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSection3Rule(), currentNode); }
	 iv_ruleSection3=ruleSection3 
	 { $current=$iv_ruleSection3.current; } 
	 EOF 
;

// Rule Section3
ruleSection3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((	otherlv_0='section3:' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getSection3Access().getSection3Keyword_0_0_0(), null);
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(lv_name_1_0, grammarAccess.getSection3Access().getNameIDTerminalRuleCall_0_0_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_2='[' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getSection3Access().getLeftSquareBracketKeyword_0_0_2(), null);
    }
)
    |	otherlv_3='section3[' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getSection3Access().getSection3Keyword_0_1(), null);
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection3Access().getTitleTextOrMarkupParserRuleCall_1_0(), currentNode); 
	    }
		lv_title_4_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_4_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	otherlv_5=']' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getSection3Access().getRightSquareBracketKeyword_2(), null);
    }
(this_MULTI_NL_6=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_6, grammarAccess.getSection3Access().getMULTI_NLTerminalRuleCall_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection3Access().getContentsTextOrMarkupParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_contents_7_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_7_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(this_MULTI_NL_8=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_8, grammarAccess.getSection3Access().getMULTI_NLTerminalRuleCall_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection3Access().getSubSectionsSection4ParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_subSections_9_0=ruleSection4		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"subSections",
	        		lv_subSections_9_0, 
	        		"Section4", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleSection4
entryRuleSection4 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSection4Rule(), currentNode); }
	 iv_ruleSection4=ruleSection4 
	 { $current=$iv_ruleSection4.current; } 
	 EOF 
;

// Rule Section4
ruleSection4 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((	otherlv_0='section4:' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getSection4Access().getSection4Keyword_0_0_0(), null);
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(lv_name_1_0, grammarAccess.getSection4Access().getNameIDTerminalRuleCall_0_0_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_2='[' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getSection4Access().getLeftSquareBracketKeyword_0_0_2(), null);
    }
)
    |	otherlv_3='section4[' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getSection4Access().getSection4Keyword_0_1(), null);
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection4Access().getTitleTextOrMarkupParserRuleCall_1_0(), currentNode); 
	    }
		lv_title_4_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_4_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	otherlv_5=']' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getSection4Access().getRightSquareBracketKeyword_2(), null);
    }
(this_MULTI_NL_6=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_6, grammarAccess.getSection4Access().getMULTI_NLTerminalRuleCall_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection4Access().getContentsTextOrMarkupParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_contents_7_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_7_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleTextOrMarkup
entryRuleTextOrMarkup returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTextOrMarkupRule(), currentNode); }
	 iv_ruleTextOrMarkup=ruleTextOrMarkup 
	 { $current=$iv_ruleTextOrMarkup.current; } 
	 EOF 
;

// Rule TextOrMarkup
ruleTextOrMarkup returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTextOrMarkupAccess().getContentsTextPartParserRuleCall_0_0_0(), currentNode); 
	    }
		lv_contents_0_0=ruleTextPart		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextOrMarkupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_0_0, 
	        		"TextPart", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTextOrMarkupAccess().getContentsMarkUpParserRuleCall_0_1_0_0(), currentNode); 
	    }
		lv_contents_1_0=ruleMarkUp		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextOrMarkupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_1_0, 
	        		"MarkUp", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTextOrMarkupAccess().getContentsTextPartParserRuleCall_0_1_1_0(), currentNode); 
	    }
		lv_contents_2_0=ruleTextPart		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextOrMarkupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_2_0, 
	        		"TextPart", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)*)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTextOrMarkupAccess().getContentsMarkUpParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_contents_3_0=ruleMarkUp		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextOrMarkupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_3_0, 
	        		"MarkUp", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTextOrMarkupAccess().getContentsTextPartParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_contents_4_0=ruleTextPart		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextOrMarkupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_4_0, 
	        		"TextPart", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)+)
;





// Entry rule entryRuleTextPart
entryRuleTextPart returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTextPartRule(), currentNode); }
	 iv_ruleTextPart=ruleTextPart 
	 { $current=$iv_ruleTextPart.current; } 
	 EOF 
;

// Rule TextPart
ruleTextPart returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTextPartAccess().getTextTextParserRuleCall_0(), currentNode); 
	    }
		lv_text_0_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextPartRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"text",
	        		lv_text_0_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Entry rule entryRuleText
entryRuleText returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTextRule(), currentNode); } 
	 iv_ruleText=ruleText 
	 { $current=$iv_ruleText.current.getText(); }  
	 EOF 
;

// Rule Text
ruleText returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(this_ID_0, grammarAccess.getTextAccess().getIDTerminalRuleCall_0(), null); 
    }

    |    this_WS_1=RULE_WS    {
		$current.merge(this_WS_1);
    }

    { 
    createLeafNode(this_WS_1, grammarAccess.getTextAccess().getWSTerminalRuleCall_1(), null); 
    }

    |    this_SINGLE_NL_2=RULE_SINGLE_NL    {
		$current.merge(this_SINGLE_NL_2);
    }

    { 
    createLeafNode(this_SINGLE_NL_2, grammarAccess.getTextAccess().getSINGLE_NLTerminalRuleCall_2(), null); 
    }

    |    this_ANY_OTHER_3=RULE_ANY_OTHER    {
		$current.merge(this_ANY_OTHER_3);
    }

    { 
    createLeafNode(this_ANY_OTHER_3, grammarAccess.getTextAccess().getANY_OTHERTerminalRuleCall_3(), null); 
    }

    |
	kw='\\[' 
    {
        $current.merge(kw);
        createLeafNode(kw, grammarAccess.getTextAccess().getReverseSolidusLeftSquareBracketKeyword_4(), null); 
    }

    |
	kw='\\]' 
    {
        $current.merge(kw);
        createLeafNode(kw, grammarAccess.getTextAccess().getReverseSolidusRightSquareBracketKeyword_5(), null); 
    }

    |
	kw=',' 
    {
        $current.merge(kw);
        createLeafNode(kw, grammarAccess.getTextAccess().getCommaKeyword_6(), null); 
    }
)+
    ;





// Entry rule entryRuleMarkUp
entryRuleMarkUp returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMarkUpRule(), currentNode); }
	 iv_ruleMarkUp=ruleMarkUp 
	 { $current=$iv_ruleMarkUp.current; } 
	 EOF 
;

// Rule MarkUp
ruleMarkUp returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getEmphasizeParserRuleCall_0(), currentNode); 
    }
    this_Emphasize_0=ruleEmphasize
    { 
        $current = $this_Emphasize_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getAnchorParserRuleCall_1(), currentNode); 
    }
    this_Anchor_1=ruleAnchor
    { 
        $current = $this_Anchor_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getRefParserRuleCall_2(), currentNode); 
    }
    this_Ref_2=ruleRef
    { 
        $current = $this_Ref_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getOrderedListParserRuleCall_3(), currentNode); 
    }
    this_OrderedList_3=ruleOrderedList
    { 
        $current = $this_OrderedList_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getUnorderedListParserRuleCall_4(), currentNode); 
    }
    this_UnorderedList_4=ruleUnorderedList
    { 
        $current = $this_UnorderedList_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getCodeBlockParserRuleCall_5(), currentNode); 
    }
    this_CodeBlock_5=ruleCodeBlock
    { 
        $current = $this_CodeBlock_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getCodeRefParserRuleCall_6(), currentNode); 
    }
    this_CodeRef_6=ruleCodeRef
    { 
        $current = $this_CodeRef_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getLinkParserRuleCall_7(), currentNode); 
    }
    this_Link_7=ruleLink
    { 
        $current = $this_Link_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getImageRefParserRuleCall_8(), currentNode); 
    }
    this_ImageRef_8=ruleImageRef
    { 
        $current = $this_ImageRef_8.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getTableParserRuleCall_9(), currentNode); 
    }
    this_Table_9=ruleTable
    { 
        $current = $this_Table_9.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getTodoParserRuleCall_10(), currentNode); 
    }
    this_Todo_10=ruleTodo
    { 
        $current = $this_Todo_10.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTableRule(), currentNode); }
	 iv_ruleTable=ruleTable 
	 { $current=$iv_ruleTable.current; } 
	 EOF 
;

// Rule Table
ruleTable returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getTableAccess().getTableAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getTableAccess().getTableAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	otherlv_1='table[' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getTableAccess().getTableKeyword_1(), null);
    }
((
    { 
        currentNode=createCompositeNode(grammarAccess.getTableAccess().getANY_WSParserRuleCall_2_0(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_rows_3_0=ruleTableRow		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"rows",
	        		lv_rows_3_0, 
	        		"TableRow", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(
    { 
        currentNode=createCompositeNode(grammarAccess.getTableAccess().getANY_WSParserRuleCall_3(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	otherlv_5=']' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getTableAccess().getRightSquareBracketKeyword_4(), null);
    }
)
;





// Entry rule entryRuleTableRow
entryRuleTableRow returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTableRowRule(), currentNode); }
	 iv_ruleTableRow=ruleTableRow 
	 { $current=$iv_ruleTableRow.current; } 
	 EOF 
;

// Rule TableRow
ruleTableRow returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getTableRowAccess().getTableRowAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getTableRowAccess().getTableRowAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	otherlv_1='tr[' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getTableRowAccess().getTrKeyword_1(), null);
    }
((
    { 
        currentNode=createCompositeNode(grammarAccess.getTableRowAccess().getANY_WSParserRuleCall_2_0(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableRowAccess().getDataTableDataParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_data_3_0=ruleTableData		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableRowRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"data",
	        		lv_data_3_0, 
	        		"TableData", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(
    { 
        currentNode=createCompositeNode(grammarAccess.getTableRowAccess().getANY_WSParserRuleCall_3(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	otherlv_5=']' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getTableRowAccess().getRightSquareBracketKeyword_4(), null);
    }
)
;





// Entry rule entryRuleTableData
entryRuleTableData returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTableDataRule(), currentNode); }
	 iv_ruleTableData=ruleTableData 
	 { $current=$iv_ruleTableData.current; } 
	 EOF 
;

// Rule TableData
ruleTableData returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getTableDataAccess().getTableDataAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getTableDataAccess().getTableDataAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	otherlv_1='td[' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getTableDataAccess().getTdKeyword_1(), null);
    }
((this_MULTI_NL_2=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_2, grammarAccess.getTableDataAccess().getMULTI_NLTerminalRuleCall_2_0(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableDataAccess().getContentsTextOrMarkupParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_contents_3_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableDataRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_3_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(this_MULTI_NL_4=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_4, grammarAccess.getTableDataAccess().getMULTI_NLTerminalRuleCall_2_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableDataAccess().getContentsTextOrMarkupParserRuleCall_2_2_1_0(), currentNode); 
	    }
		lv_contents_5_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableDataRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_5_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	otherlv_6=']' 
    {
    	createLeafNode(otherlv_6, grammarAccess.getTableDataAccess().getRightSquareBracketKeyword_3(), null);
    }
)
;





// Entry rule entryRuleEmphasize
entryRuleEmphasize returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEmphasizeRule(), currentNode); }
	 iv_ruleEmphasize=ruleEmphasize 
	 { $current=$iv_ruleEmphasize.current; } 
	 EOF 
;

// Rule Emphasize
ruleEmphasize returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getEmphasizeAccess().getEmphasizeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getEmphasizeAccess().getEmphasizeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	otherlv_1='e[' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getEmphasizeAccess().getEKeyword_1(), null);
    }
((this_MULTI_NL_2=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_2, grammarAccess.getEmphasizeAccess().getMULTI_NLTerminalRuleCall_2_0(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEmphasizeAccess().getContentsTextOrMarkupParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_contents_3_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEmphasizeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_3_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(this_MULTI_NL_4=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_4, grammarAccess.getEmphasizeAccess().getMULTI_NLTerminalRuleCall_2_2(), null); 
    }
)?)?	otherlv_5=']' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getEmphasizeAccess().getRightSquareBracketKeyword_3(), null);
    }
)
;





// Entry rule entryRuleAnchor
entryRuleAnchor returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAnchorRule(), currentNode); }
	 iv_ruleAnchor=ruleAnchor 
	 { $current=$iv_ruleAnchor.current; } 
	 EOF 
;

// Rule Anchor
ruleAnchor returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='a[' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getAnchorAccess().getAKeyword_0(), null);
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(lv_name_1_0, grammarAccess.getAnchorAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnchorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_2=']' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getAnchorAccess().getRightSquareBracketKeyword_2(), null);
    }
)
;





// Entry rule entryRuleRef
entryRuleRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRefRule(), currentNode); }
	 iv_ruleRef=ruleRef 
	 { $current=$iv_ruleRef.current; } 
	 EOF 
;

// Rule Ref
ruleRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='ref:' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getRefAccess().getRefKeyword_0(), null);
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	otherlv_1=RULE_ID
	{
		createLeafNode(otherlv_1, grammarAccess.getRefAccess().getRefIdentifiableCrossReference_1_0(), "ref"); 
	}

)
)(	otherlv_2='[' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getRefAccess().getLeftSquareBracketKeyword_2_0(), null);
    }
(this_MULTI_NL_3=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_3, grammarAccess.getRefAccess().getMULTI_NLTerminalRuleCall_2_1(), null); 
    }
)?((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRefAccess().getContentsTextOrMarkupParserRuleCall_2_2_0_0(), currentNode); 
	    }
		lv_contents_4_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_4_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(this_MULTI_NL_5=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_5, grammarAccess.getRefAccess().getMULTI_NLTerminalRuleCall_2_2_1(), null); 
    }
)?)?	otherlv_6=']' 
    {
    	createLeafNode(otherlv_6, grammarAccess.getRefAccess().getRightSquareBracketKeyword_2_3(), null);
    }
)?)
;





// Entry rule entryRuleOrderedList
entryRuleOrderedList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOrderedListRule(), currentNode); }
	 iv_ruleOrderedList=ruleOrderedList 
	 { $current=$iv_ruleOrderedList.current; } 
	 EOF 
;

// Rule OrderedList
ruleOrderedList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getOrderedListAccess().getOrderedListAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getOrderedListAccess().getOrderedListAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	otherlv_1='ol[' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getOrderedListAccess().getOlKeyword_1(), null);
    }
((
    { 
        currentNode=createCompositeNode(grammarAccess.getOrderedListAccess().getANY_WSParserRuleCall_2_0(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOrderedListAccess().getItemsItemParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_items_3_0=ruleItem		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOrderedListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"items",
	        		lv_items_3_0, 
	        		"Item", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(
    { 
        currentNode=createCompositeNode(grammarAccess.getOrderedListAccess().getANY_WSParserRuleCall_3(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	otherlv_5=']' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getOrderedListAccess().getRightSquareBracketKeyword_4(), null);
    }
)
;





// Entry rule entryRuleUnorderedList
entryRuleUnorderedList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnorderedListRule(), currentNode); }
	 iv_ruleUnorderedList=ruleUnorderedList 
	 { $current=$iv_ruleUnorderedList.current; } 
	 EOF 
;

// Rule UnorderedList
ruleUnorderedList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getUnorderedListAccess().getUnorderedListAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getUnorderedListAccess().getUnorderedListAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	otherlv_1='ul[' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getUnorderedListAccess().getUlKeyword_1(), null);
    }
((
    { 
        currentNode=createCompositeNode(grammarAccess.getUnorderedListAccess().getANY_WSParserRuleCall_2_0(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnorderedListAccess().getItemsItemParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_items_3_0=ruleItem		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnorderedListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"items",
	        		lv_items_3_0, 
	        		"Item", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(
    { 
        currentNode=createCompositeNode(grammarAccess.getUnorderedListAccess().getANY_WSParserRuleCall_3(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	otherlv_5=']' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getUnorderedListAccess().getRightSquareBracketKeyword_4(), null);
    }
)
;





// Entry rule entryRuleItem
entryRuleItem returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getItemRule(), currentNode); }
	 iv_ruleItem=ruleItem 
	 { $current=$iv_ruleItem.current; } 
	 EOF 
;

// Rule Item
ruleItem returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getItemAccess().getItemAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getItemAccess().getItemAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	otherlv_1='item[' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getItemAccess().getItemKeyword_1(), null);
    }
((this_MULTI_NL_2=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_2, grammarAccess.getItemAccess().getMULTI_NLTerminalRuleCall_2_0(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getItemAccess().getContentsTextOrMarkupParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_contents_3_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_3_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(this_MULTI_NL_4=RULE_MULTI_NL
    { 
    createLeafNode(this_MULTI_NL_4, grammarAccess.getItemAccess().getMULTI_NLTerminalRuleCall_2_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getItemAccess().getContentsTextOrMarkupParserRuleCall_2_2_1_0(), currentNode); 
	    }
		lv_contents_5_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_5_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	otherlv_6=']' 
    {
    	createLeafNode(otherlv_6, grammarAccess.getItemAccess().getRightSquareBracketKeyword_3(), null);
    }
)
;





// Entry rule entryRuleCodeRef
entryRuleCodeRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCodeRefRule(), currentNode); }
	 iv_ruleCodeRef=ruleCodeRef 
	 { $current=$iv_ruleCodeRef.current; } 
	 EOF 
;

// Rule CodeRef
ruleCodeRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getCodeRefAccess().getCodeRefAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCodeRefAccess().getCodeRefAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	otherlv_1='codeRef[' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getCodeRefAccess().getCodeRefKeyword_1(), null);
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeRefAccess().getElementJvmDeclaredTypeCrossReference_2_0(), currentNode); 
	    }
		ruleText		{ 
	        currentNode = currentNode.getParent();
	    }

)
)?	otherlv_3=']' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getCodeRefAccess().getRightSquareBracketKeyword_3(), null);
    }
)
;





// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLinkRule(), currentNode); }
	 iv_ruleLink=ruleLink 
	 { $current=$iv_ruleLink.current; } 
	 EOF 
;

// Rule Link
ruleLink returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getLinkAccess().getLinkAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getLinkAccess().getLinkAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	otherlv_1='link[' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getLinkAccess().getLinkKeyword_1(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLinkAccess().getUrlTextParserRuleCall_2_0(), currentNode); 
	    }
		lv_url_2_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"url",
	        		lv_url_2_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	otherlv_3=']' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getLinkAccess().getRightSquareBracketKeyword_3(), null);
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getLinkAccess().getANY_WSParserRuleCall_4(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	otherlv_5='[' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getLinkAccess().getLeftSquareBracketKeyword_5(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLinkAccess().getTextTextParserRuleCall_6_0(), currentNode); 
	    }
		lv_text_6_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"text",
	        		lv_text_6_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	otherlv_7=']' 
    {
    	createLeafNode(otherlv_7, grammarAccess.getLinkAccess().getRightSquareBracketKeyword_7(), null);
    }
)
;





// Entry rule entryRuleImageRef
entryRuleImageRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getImageRefRule(), currentNode); }
	 iv_ruleImageRef=ruleImageRef 
	 { $current=$iv_ruleImageRef.current; } 
	 EOF 
;

// Rule ImageRef
ruleImageRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((	otherlv_0='img:' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getImageRefAccess().getImgKeyword_0_0_0(), null);
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getANY_WSParserRuleCall_0_0_1(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(lv_name_2_0, grammarAccess.getImageRefAccess().getNameIDTerminalRuleCall_0_0_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
    { 
        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getANY_WSParserRuleCall_0_0_3(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	otherlv_4='[' 
    {
    	createLeafNode(otherlv_4, grammarAccess.getImageRefAccess().getLeftSquareBracketKeyword_0_0_4(), null);
    }
)
    |	otherlv_5='img[' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getImageRefAccess().getImgKeyword_0_1(), null);
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getPathTextParserRuleCall_1_0(), currentNode); 
	    }
		lv_path_6_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"path",
	        		lv_path_6_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	otherlv_7=']' 
    {
    	createLeafNode(otherlv_7, grammarAccess.getImageRefAccess().getRightSquareBracketKeyword_2(), null);
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getANY_WSParserRuleCall_3(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	otherlv_9='[' 
    {
    	createLeafNode(otherlv_9, grammarAccess.getImageRefAccess().getLeftSquareBracketKeyword_4(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getClazzTextParserRuleCall_5_0(), currentNode); 
	    }
		lv_clazz_10_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"clazz",
	        		lv_clazz_10_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	otherlv_11=']' 
    {
    	createLeafNode(otherlv_11, grammarAccess.getImageRefAccess().getRightSquareBracketKeyword_6(), null);
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getANY_WSParserRuleCall_7(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	otherlv_13='[' 
    {
    	createLeafNode(otherlv_13, grammarAccess.getImageRefAccess().getLeftSquareBracketKeyword_8(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getStyleTextParserRuleCall_9_0(), currentNode); 
	    }
		lv_style_14_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"style",
	        		lv_style_14_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	otherlv_15=']' 
    {
    	createLeafNode(otherlv_15, grammarAccess.getImageRefAccess().getRightSquareBracketKeyword_10(), null);
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getANY_WSParserRuleCall_11(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	otherlv_17='[' 
    {
    	createLeafNode(otherlv_17, grammarAccess.getImageRefAccess().getLeftSquareBracketKeyword_12(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getCaptionTextParserRuleCall_13_0(), currentNode); 
	    }
		lv_caption_18_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"caption",
	        		lv_caption_18_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	otherlv_19=']' 
    {
    	createLeafNode(otherlv_19, grammarAccess.getImageRefAccess().getRightSquareBracketKeyword_14(), null);
    }
)
;





// Entry rule entryRuleCodeBlock
entryRuleCodeBlock returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCodeBlockRule(), currentNode); }
	 iv_ruleCodeBlock=ruleCodeBlock 
	 { $current=$iv_ruleCodeBlock.current; } 
	 EOF 
;

// Rule CodeBlock
ruleCodeBlock returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getCodeBlockAccess().getCodeBlockAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCodeBlockAccess().getCodeBlockAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	otherlv_1='code[' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getCodeBlockAccess().getCodeKeyword_1(), null);
    }
((
    { 
        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getANY_WSParserRuleCall_2_0(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	otherlv_3=RULE_ID
	{
		createLeafNode(otherlv_3, grammarAccess.getCodeBlockAccess().getLanguageLangDefCrossReference_2_1_0(), "language"); 
	}

)
)(
    { 
        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getANY_WSParserRuleCall_2_2(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	otherlv_5=']' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getCodeBlockAccess().getRightSquareBracketKeyword_2_3(), null);
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getANY_WSParserRuleCall_2_4(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	otherlv_7='[' 
    {
    	createLeafNode(otherlv_7, grammarAccess.getCodeBlockAccess().getLeftSquareBracketKeyword_2_5(), null);
    }
)?(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getContentsCodeParserRuleCall_3_0_0_0(), currentNode); 
	    }
		lv_contents_8_0=ruleCode		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_8_0, 
	        		"Code", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getContentsMarkupInCodeParserRuleCall_3_0_1_0_0(), currentNode); 
	    }
		lv_contents_9_0=ruleMarkupInCode		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_9_0, 
	        		"MarkupInCode", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getContentsCodeParserRuleCall_3_0_1_1_0(), currentNode); 
	    }
		lv_contents_10_0=ruleCode		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_10_0, 
	        		"Code", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)*)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getContentsMarkupInCodeParserRuleCall_3_1_0_0(), currentNode); 
	    }
		lv_contents_11_0=ruleMarkupInCode		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_11_0, 
	        		"MarkupInCode", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getContentsCodeParserRuleCall_3_1_1_0(), currentNode); 
	    }
		lv_contents_12_0=ruleCode		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_12_0, 
	        		"Code", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)+)?	otherlv_13=']' 
    {
    	createLeafNode(otherlv_13, grammarAccess.getCodeBlockAccess().getRightSquareBracketKeyword_4(), null);
    }
)
;





// Entry rule entryRuleTodo
entryRuleTodo returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTodoRule(), currentNode); }
	 iv_ruleTodo=ruleTodo 
	 { $current=$iv_ruleTodo.current; } 
	 EOF 
;

// Rule Todo
ruleTodo returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getTodoAccess().getTodoAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getTodoAccess().getTodoAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	otherlv_1='todo[' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getTodoAccess().getTodoKeyword_1(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTodoAccess().getTextTextParserRuleCall_2_0(), currentNode); 
	    }
		lv_text_2_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTodoRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"text",
	        		lv_text_2_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	otherlv_3=']' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getTodoAccess().getRightSquareBracketKeyword_3(), null);
    }
)
;





// Entry rule entryRuleCode
entryRuleCode returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCodeRule(), currentNode); }
	 iv_ruleCode=ruleCode 
	 { $current=$iv_ruleCode.current; } 
	 EOF 
;

// Rule Code
ruleCode returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeAccess().getContentsCodeTextParserRuleCall_0(), currentNode); 
	    }
		lv_contents_0_0=ruleCodeText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"contents",
	        		lv_contents_0_0, 
	        		"CodeText", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Entry rule entryRuleMarkupInCode
entryRuleMarkupInCode returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMarkupInCodeRule(), currentNode); }
	 iv_ruleMarkupInCode=ruleMarkupInCode 
	 { $current=$iv_ruleMarkupInCode.current; } 
	 EOF 
;

// Rule MarkupInCode
ruleMarkupInCode returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkupInCodeAccess().getEmphasizeParserRuleCall_0(), currentNode); 
    }
    this_Emphasize_0=ruleEmphasize
    { 
        $current = $this_Emphasize_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkupInCodeAccess().getAnchorParserRuleCall_1(), currentNode); 
    }
    this_Anchor_1=ruleAnchor
    { 
        $current = $this_Anchor_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkupInCodeAccess().getRefParserRuleCall_2(), currentNode); 
    }
    this_Ref_2=ruleRef
    { 
        $current = $this_Ref_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkupInCodeAccess().getTodoParserRuleCall_3(), currentNode); 
    }
    this_Todo_3=ruleTodo
    { 
        $current = $this_Todo_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleLangDef
entryRuleLangDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLangDefRule(), currentNode); }
	 iv_ruleLangDef=ruleLangDef 
	 { $current=$iv_ruleLangDef.current; } 
	 EOF 
;

// Rule LangDef
ruleLangDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	otherlv_0='codelanguage-def[' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getLangDefAccess().getCodelanguageDefKeyword_0_0(), null);
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(lv_name_1_0, grammarAccess.getLangDefAccess().getNameIDTerminalRuleCall_0_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLangDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_2=']' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getLangDefAccess().getRightSquareBracketKeyword_0_2(), null);
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getLangDefAccess().getANY_WSParserRuleCall_0_3(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	otherlv_4='[' 
    {
    	createLeafNode(otherlv_4, grammarAccess.getLangDefAccess().getLeftSquareBracketKeyword_0_4(), null);
    }
((
    { 
        currentNode=createCompositeNode(grammarAccess.getLangDefAccess().getANY_WSParserRuleCall_0_5_0(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		lv_keywords_6_0=RULE_ID
		{
			createLeafNode(lv_keywords_6_0, grammarAccess.getLangDefAccess().getKeywordsIDTerminalRuleCall_0_5_1_0(), "keywords"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLangDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"keywords",
	        		lv_keywords_6_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	otherlv_7=',' 
    {
    	createLeafNode(otherlv_7, grammarAccess.getLangDefAccess().getCommaKeyword_0_5_2_0(), null);
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getLangDefAccess().getANY_WSParserRuleCall_0_5_2_1(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		lv_keywords_9_0=RULE_ID
		{
			createLeafNode(lv_keywords_9_0, grammarAccess.getLangDefAccess().getKeywordsIDTerminalRuleCall_0_5_2_2_0(), "keywords"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLangDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"keywords",
	        		lv_keywords_9_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
    { 
        currentNode=createCompositeNode(grammarAccess.getLangDefAccess().getANY_WSParserRuleCall_0_5_2_3(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*)*)?	otherlv_11=']' 
    {
    	createLeafNode(otherlv_11, grammarAccess.getLangDefAccess().getRightSquareBracketKeyword_0_6(), null);
    }
)
    |((
    { 
        temp=factory.create(grammarAccess.getLangDefAccess().getLangDefAction_1_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getLangDefAccess().getLangDefAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	otherlv_13='codelanguage-def[' 
    {
    	createLeafNode(otherlv_13, grammarAccess.getLangDefAccess().getCodelanguageDefKeyword_1_1(), null);
    }
((
    { 
        currentNode=createCompositeNode(grammarAccess.getLangDefAccess().getANY_WSParserRuleCall_1_2_0(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		lv_keywords_15_0=RULE_ID
		{
			createLeafNode(lv_keywords_15_0, grammarAccess.getLangDefAccess().getKeywordsIDTerminalRuleCall_1_2_1_0(), "keywords"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLangDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"keywords",
	        		lv_keywords_15_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	otherlv_16=',' 
    {
    	createLeafNode(otherlv_16, grammarAccess.getLangDefAccess().getCommaKeyword_1_2_2_0(), null);
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getLangDefAccess().getANY_WSParserRuleCall_1_2_2_1(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		lv_keywords_18_0=RULE_ID
		{
			createLeafNode(lv_keywords_18_0, grammarAccess.getLangDefAccess().getKeywordsIDTerminalRuleCall_1_2_2_2_0(), "keywords"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLangDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"keywords",
	        		lv_keywords_18_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
    { 
        currentNode=createCompositeNode(grammarAccess.getLangDefAccess().getANY_WSParserRuleCall_1_2_2_3(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*)*)?	otherlv_20=']' 
    {
    	createLeafNode(otherlv_20, grammarAccess.getLangDefAccess().getRightSquareBracketKeyword_1_3(), null);
    }
))
;





// Entry rule entryRuleCodeText
entryRuleCodeText returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCodeTextRule(), currentNode); } 
	 iv_ruleCodeText=ruleCodeText 
	 { $current=$iv_ruleCodeText.current.getText(); }  
	 EOF 
;

// Rule CodeText
ruleCodeText returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(this_ID_0, grammarAccess.getCodeTextAccess().getIDTerminalRuleCall_0(), null); 
    }

    |    this_MULTI_NL_1=RULE_MULTI_NL    {
		$current.merge(this_MULTI_NL_1);
    }

    { 
    createLeafNode(this_MULTI_NL_1, grammarAccess.getCodeTextAccess().getMULTI_NLTerminalRuleCall_1(), null); 
    }

    |    this_WS_2=RULE_WS    {
		$current.merge(this_WS_2);
    }

    { 
    createLeafNode(this_WS_2, grammarAccess.getCodeTextAccess().getWSTerminalRuleCall_2(), null); 
    }

    |    this_SINGLE_NL_3=RULE_SINGLE_NL    {
		$current.merge(this_SINGLE_NL_3);
    }

    { 
    createLeafNode(this_SINGLE_NL_3, grammarAccess.getCodeTextAccess().getSINGLE_NLTerminalRuleCall_3(), null); 
    }

    |    this_ANY_OTHER_4=RULE_ANY_OTHER    {
		$current.merge(this_ANY_OTHER_4);
    }

    { 
    createLeafNode(this_ANY_OTHER_4, grammarAccess.getCodeTextAccess().getANY_OTHERTerminalRuleCall_4(), null); 
    }

    |
	kw='\\[' 
    {
        $current.merge(kw);
        createLeafNode(kw, grammarAccess.getCodeTextAccess().getReverseSolidusLeftSquareBracketKeyword_5(), null); 
    }

    |
	kw='\\]' 
    {
        $current.merge(kw);
        createLeafNode(kw, grammarAccess.getCodeTextAccess().getReverseSolidusRightSquareBracketKeyword_6(), null); 
    }

    |
	kw=',' 
    {
        $current.merge(kw);
        createLeafNode(kw, grammarAccess.getCodeTextAccess().getCommaKeyword_7(), null); 
    }
)+
    ;





// Entry rule entryRuleANY_WS
entryRuleANY_WS returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getANY_WSRule(), currentNode); } 
	 iv_ruleANY_WS=ruleANY_WS 
	 { $current=$iv_ruleANY_WS.current.getText(); }  
	 EOF 
;

// Rule ANY_WS
ruleANY_WS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_MULTI_NL_0=RULE_MULTI_NL    {
		$current.merge(this_MULTI_NL_0);
    }

    { 
    createLeafNode(this_MULTI_NL_0, grammarAccess.getANY_WSAccess().getMULTI_NLTerminalRuleCall_0(), null); 
    }

    |    this_SINGLE_NL_1=RULE_SINGLE_NL    {
		$current.merge(this_SINGLE_NL_1);
    }

    { 
    createLeafNode(this_SINGLE_NL_1, grammarAccess.getANY_WSAccess().getSINGLE_NLTerminalRuleCall_1(), null); 
    }

    |    this_WS_2=RULE_WS    {
		$current.merge(this_WS_2);
    }

    { 
    createLeafNode(this_WS_2, grammarAccess.getANY_WSAccess().getWSTerminalRuleCall_2(), null); 
    }
)
    ;





RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_SL_COMMENT : '%%' ~(('\n'|'\r'))* '\r'? '\n';

RULE_MULTI_NL : '\r'? '\n' ('\r'? '\n')+;

RULE_SINGLE_NL : '\r'? '\n';

RULE_WS : (' '|'\t');

RULE_ANY_OTHER : .;


