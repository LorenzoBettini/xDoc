/*
* generated by Xtext
*/
grammar InternalXDoc;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.xtext.xdoc.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.xdoc.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.xtext.xdoc.services.XDocGrammarAccess;

}

@parser::members {

 	private XDocGrammarAccess grammarAccess;
 	
    public InternalXDocParser(TokenStream input, IAstFactory factory, XDocGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/eclipse/xtext/xdoc/parser/antlr/internal/InternalXDoc.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Document";	
   	}
   	
   	@Override
   	protected XDocGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDocument
entryRuleDocument returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDocumentRule(), currentNode); }
	 iv_ruleDocument=ruleDocument 
	 { $current=$iv_ruleDocument.current; } 
	 EOF 
;

// Rule Document
ruleDocument returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getDocumentAccess().getDocumentAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getDocumentAccess().getDocumentAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(RULE_WS
    { 
    createLeafNode(grammarAccess.getDocumentAccess().getWSTerminalRuleCall_1(), null); 
    }
)?(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getDocumentAccess().getMULTI_NLTerminalRuleCall_2(), null); 
    }
)?((((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDocumentAccess().getChaptersChapterParserRuleCall_3_0_0_0_0(), currentNode); 
	    }
		lv_chapters_3_0=ruleChapter		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDocumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"chapters",
	        		lv_chapters_3_0, 
	        		"Chapter", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getDocumentAccess().getMULTI_NLTerminalRuleCall_3_0_0_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDocumentAccess().getChaptersChapterParserRuleCall_3_0_0_1_1_0(), currentNode); 
	    }
		lv_chapters_5_0=ruleChapter		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDocumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"chapters",
	        		lv_chapters_5_0, 
	        		"Chapter", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDocumentAccess().getSectionsSectionParserRuleCall_3_0_1_0_0(), currentNode); 
	    }
		lv_sections_6_0=ruleSection		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDocumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"sections",
	        		lv_sections_6_0, 
	        		"Section", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getDocumentAccess().getMULTI_NLTerminalRuleCall_3_0_1_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDocumentAccess().getSectionsSectionParserRuleCall_3_0_1_1_1_0(), currentNode); 
	    }
		lv_sections_8_0=ruleSection		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDocumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"sections",
	        		lv_sections_8_0, 
	        		"Section", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDocumentAccess().getSubsectionsSubSectionParserRuleCall_3_0_2_0_0(), currentNode); 
	    }
		lv_subsections_9_0=ruleSubSection		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDocumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"subsections",
	        		lv_subsections_9_0, 
	        		"SubSection", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getDocumentAccess().getMULTI_NLTerminalRuleCall_3_0_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDocumentAccess().getSubsectionsSubSectionParserRuleCall_3_0_2_1_1_0(), currentNode); 
	    }
		lv_subsections_11_0=ruleSubSection		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDocumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"subsections",
	        		lv_subsections_11_0, 
	        		"SubSection", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*))(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getDocumentAccess().getMULTI_NLTerminalRuleCall_3_1(), null); 
    }
)?)?)
;





// Entry rule entryRuleChapter
entryRuleChapter returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getChapterRule(), currentNode); }
	 iv_ruleChapter=ruleChapter 
	 { $current=$iv_ruleChapter.current; } 
	 EOF 
;

// Rule Chapter
ruleChapter returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\chapter' 
    {
        createLeafNode(grammarAccess.getChapterAccess().getChapterKeyword_0(), null); 
    }
(	':' 
    {
        createLeafNode(grammarAccess.getChapterAccess().getColonKeyword_1_0(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getChapterAccess().getNameIDTerminalRuleCall_1_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getChapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	'[' 
    {
        createLeafNode(grammarAccess.getChapterAccess().getLeftSquareBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getChapterAccess().getTitleTextOrMarkupParserRuleCall_3_0(), currentNode); 
	    }
		lv_title_4_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getChapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_4_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getChapterAccess().getRightSquareBracketKeyword_4(), null); 
    }
(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getChapterAccess().getMULTI_NLTerminalRuleCall_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getChapterAccess().getContentsTextOrMarkupParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_contents_7_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getChapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_7_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getChapterAccess().getMULTI_NLTerminalRuleCall_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getChapterAccess().getContentsSectionParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_contents_9_0=ruleSection		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getChapterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_9_0, 
	        		"Section", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleSection
entryRuleSection returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSectionRule(), currentNode); }
	 iv_ruleSection=ruleSection 
	 { $current=$iv_ruleSection.current; } 
	 EOF 
;

// Rule Section
ruleSection returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\section' 
    {
        createLeafNode(grammarAccess.getSectionAccess().getSectionKeyword_0(), null); 
    }
(	':' 
    {
        createLeafNode(grammarAccess.getSectionAccess().getColonKeyword_1_0(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getSectionAccess().getNameIDTerminalRuleCall_1_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	'[' 
    {
        createLeafNode(grammarAccess.getSectionAccess().getLeftSquareBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionAccess().getTitleTextOrMarkupParserRuleCall_3_0(), currentNode); 
	    }
		lv_title_4_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_4_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getSectionAccess().getRightSquareBracketKeyword_4(), null); 
    }
(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getSectionAccess().getMULTI_NLTerminalRuleCall_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionAccess().getContentsTextOrMarkupParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_contents_7_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_7_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getSectionAccess().getMULTI_NLTerminalRuleCall_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionAccess().getContentsSubSectionParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_contents_9_0=ruleSubSection		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_9_0, 
	        		"SubSection", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleSubSection
entryRuleSubSection returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSubSectionRule(), currentNode); }
	 iv_ruleSubSection=ruleSubSection 
	 { $current=$iv_ruleSubSection.current; } 
	 EOF 
;

// Rule SubSection
ruleSubSection returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\subsection' 
    {
        createLeafNode(grammarAccess.getSubSectionAccess().getSubsectionKeyword_0(), null); 
    }
(	':' 
    {
        createLeafNode(grammarAccess.getSubSectionAccess().getColonKeyword_1_0(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getSubSectionAccess().getNameIDTerminalRuleCall_1_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	'[' 
    {
        createLeafNode(grammarAccess.getSubSectionAccess().getLeftSquareBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubSectionAccess().getTitleTextOrMarkupParserRuleCall_3_0(), currentNode); 
	    }
		lv_title_4_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_4_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getSubSectionAccess().getRightSquareBracketKeyword_4(), null); 
    }
(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getSubSectionAccess().getMULTI_NLTerminalRuleCall_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubSectionAccess().getContentsTextOrMarkupParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_contents_7_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_7_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getSubSectionAccess().getMULTI_NLTerminalRuleCall_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubSectionAccess().getContentsSection3ParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_contents_9_0=ruleSection3		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_9_0, 
	        		"Section3", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleSection3
entryRuleSection3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSection3Rule(), currentNode); }
	 iv_ruleSection3=ruleSection3 
	 { $current=$iv_ruleSection3.current; } 
	 EOF 
;

// Rule Section3
ruleSection3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\section3' 
    {
        createLeafNode(grammarAccess.getSection3Access().getSection3Keyword_0(), null); 
    }
(	':' 
    {
        createLeafNode(grammarAccess.getSection3Access().getColonKeyword_1_0(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getSection3Access().getNameIDTerminalRuleCall_1_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	'[' 
    {
        createLeafNode(grammarAccess.getSection3Access().getLeftSquareBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection3Access().getTitleTextOrMarkupParserRuleCall_3_0(), currentNode); 
	    }
		lv_title_4_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_4_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getSection3Access().getRightSquareBracketKeyword_4(), null); 
    }
(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getSection3Access().getMULTI_NLTerminalRuleCall_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection3Access().getContentsTextOrMarkupParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_contents_7_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_7_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getSection3Access().getMULTI_NLTerminalRuleCall_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection3Access().getContentsSection4ParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_contents_9_0=ruleSection4		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_9_0, 
	        		"Section4", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleSection4
entryRuleSection4 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSection4Rule(), currentNode); }
	 iv_ruleSection4=ruleSection4 
	 { $current=$iv_ruleSection4.current; } 
	 EOF 
;

// Rule Section4
ruleSection4 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\section4' 
    {
        createLeafNode(grammarAccess.getSection4Access().getSection4Keyword_0(), null); 
    }
(	':' 
    {
        createLeafNode(grammarAccess.getSection4Access().getColonKeyword_1_0(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getSection4Access().getNameIDTerminalRuleCall_1_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	'[' 
    {
        createLeafNode(grammarAccess.getSection4Access().getLeftSquareBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection4Access().getTitleTextOrMarkupParserRuleCall_3_0(), currentNode); 
	    }
		lv_title_4_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_4_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getSection4Access().getRightSquareBracketKeyword_4(), null); 
    }
(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getSection4Access().getMULTI_NLTerminalRuleCall_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSection4Access().getContentsTextOrMarkupParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_contents_7_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSection4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_7_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;







// Entry rule entryRuleTextOrMarkup
entryRuleTextOrMarkup returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTextOrMarkupRule(), currentNode); }
	 iv_ruleTextOrMarkup=ruleTextOrMarkup 
	 { $current=$iv_ruleTextOrMarkup.current; } 
	 EOF 
;

// Rule TextOrMarkup
ruleTextOrMarkup returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTextOrMarkupAccess().getContentsTextPartParserRuleCall_0_0_0(), currentNode); 
	    }
		lv_contents_0_0=ruleTextPart		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextOrMarkupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_0_0, 
	        		"TextPart", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTextOrMarkupAccess().getContentsMarkUpParserRuleCall_0_1_0_0(), currentNode); 
	    }
		lv_contents_1_0=ruleMarkUp		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextOrMarkupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_1_0, 
	        		"MarkUp", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTextOrMarkupAccess().getContentsTextPartParserRuleCall_0_1_1_0(), currentNode); 
	    }
		lv_contents_2_0=ruleTextPart		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextOrMarkupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_2_0, 
	        		"TextPart", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)*)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTextOrMarkupAccess().getContentsMarkUpParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_contents_3_0=ruleMarkUp		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextOrMarkupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_3_0, 
	        		"MarkUp", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTextOrMarkupAccess().getContentsTextPartParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_contents_4_0=ruleTextPart		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextOrMarkupRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_4_0, 
	        		"TextPart", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)+)
;





// Entry rule entryRuleTextPart
entryRuleTextPart returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTextPartRule(), currentNode); }
	 iv_ruleTextPart=ruleTextPart 
	 { $current=$iv_ruleTextPart.current; } 
	 EOF 
;

// Rule TextPart
ruleTextPart returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTextPartAccess().getTextTextParserRuleCall_0(), currentNode); 
	    }
		lv_text_0_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextPartRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"text",
	        		lv_text_0_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Entry rule entryRuleText
entryRuleText returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTextRule(), currentNode); } 
	 iv_ruleText=ruleText 
	 { $current=$iv_ruleText.current.getText(); }  
	 EOF 
;

// Rule Text
ruleText returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getTextAccess().getIDTerminalRuleCall_0(), null); 
    }

    |    this_WS_1=RULE_WS    {
		$current.merge(this_WS_1);
    }

    { 
    createLeafNode(grammarAccess.getTextAccess().getWSTerminalRuleCall_1(), null); 
    }

    |    this_SINGLE_NL_2=RULE_SINGLE_NL    {
		$current.merge(this_SINGLE_NL_2);
    }

    { 
    createLeafNode(grammarAccess.getTextAccess().getSINGLE_NLTerminalRuleCall_2(), null); 
    }

    |    this_ANY_OTHER_3=RULE_ANY_OTHER    {
		$current.merge(this_ANY_OTHER_3);
    }

    { 
    createLeafNode(grammarAccess.getTextAccess().getANY_OTHERTerminalRuleCall_3(), null); 
    }

    |
	kw='\\[' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getTextAccess().getReverseSolidusLeftSquareBracketKeyword_4(), null); 
    }

    |
	kw='\\]' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getTextAccess().getReverseSolidusRightSquareBracketKeyword_5(), null); 
    }

    |
	kw=':' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getTextAccess().getColonKeyword_6(), null); 
    }
)+
    ;





// Entry rule entryRuleMarkUp
entryRuleMarkUp returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMarkUpRule(), currentNode); }
	 iv_ruleMarkUp=ruleMarkUp 
	 { $current=$iv_ruleMarkUp.current; } 
	 EOF 
;

// Rule MarkUp
ruleMarkUp returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getEmphasizeParserRuleCall_0(), currentNode); 
    }
    this_Emphasize_0=ruleEmphasize
    { 
        $current = $this_Emphasize_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getAnchorParserRuleCall_1(), currentNode); 
    }
    this_Anchor_1=ruleAnchor
    { 
        $current = $this_Anchor_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getRefParserRuleCall_2(), currentNode); 
    }
    this_Ref_2=ruleRef
    { 
        $current = $this_Ref_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getOrderedListParserRuleCall_3(), currentNode); 
    }
    this_OrderedList_3=ruleOrderedList
    { 
        $current = $this_OrderedList_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getUnorderedListParserRuleCall_4(), currentNode); 
    }
    this_UnorderedList_4=ruleUnorderedList
    { 
        $current = $this_UnorderedList_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getCodeBlockParserRuleCall_5(), currentNode); 
    }
    this_CodeBlock_5=ruleCodeBlock
    { 
        $current = $this_CodeBlock_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getCodeRefParserRuleCall_6(), currentNode); 
    }
    this_CodeRef_6=ruleCodeRef
    { 
        $current = $this_CodeRef_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getLinkParserRuleCall_7(), currentNode); 
    }
    this_Link_7=ruleLink
    { 
        $current = $this_Link_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkUpAccess().getImageRefParserRuleCall_8(), currentNode); 
    }
    this_ImageRef_8=ruleImageRef
    { 
        $current = $this_ImageRef_8.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleEmphasize
entryRuleEmphasize returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEmphasizeRule(), currentNode); }
	 iv_ruleEmphasize=ruleEmphasize 
	 { $current=$iv_ruleEmphasize.current; } 
	 EOF 
;

// Rule Emphasize
ruleEmphasize returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\emph' 
    {
        createLeafNode(grammarAccess.getEmphasizeAccess().getEmphKeyword_0(), null); 
    }
	'[' 
    {
        createLeafNode(grammarAccess.getEmphasizeAccess().getLeftSquareBracketKeyword_1(), null); 
    }
(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getEmphasizeAccess().getMULTI_NLTerminalRuleCall_2(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEmphasizeAccess().getContentsTextOrMarkupParserRuleCall_3_0(), currentNode); 
	    }
		lv_contents_3_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEmphasizeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_3_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getEmphasizeAccess().getMULTI_NLTerminalRuleCall_4(), null); 
    }
)?	']' 
    {
        createLeafNode(grammarAccess.getEmphasizeAccess().getRightSquareBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleAnchor
entryRuleAnchor returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAnchorRule(), currentNode); }
	 iv_ruleAnchor=ruleAnchor 
	 { $current=$iv_ruleAnchor.current; } 
	 EOF 
;

// Rule Anchor
ruleAnchor returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\a' 
    {
        createLeafNode(grammarAccess.getAnchorAccess().getAKeyword_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getAnchorAccess().getColonKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getAnchorAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnchorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'[' 
    {
        createLeafNode(grammarAccess.getAnchorAccess().getLeftSquareBracketKeyword_3_0(), null); 
    }
	']' 
    {
        createLeafNode(grammarAccess.getAnchorAccess().getRightSquareBracketKeyword_3_1(), null); 
    }
)?)
;





// Entry rule entryRuleRef
entryRuleRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRefRule(), currentNode); }
	 iv_ruleRef=ruleRef 
	 { $current=$iv_ruleRef.current; } 
	 EOF 
;

// Rule Ref
ruleRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\ref' 
    {
        createLeafNode(grammarAccess.getRefAccess().getRefKeyword_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getRefAccess().getColonKeyword_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getRefAccess().getRefIdentifiableCrossReference_2_0(), "ref"); 
	}

)
)	'[' 
    {
        createLeafNode(grammarAccess.getRefAccess().getLeftSquareBracketKeyword_3(), null); 
    }
(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getRefAccess().getMULTI_NLTerminalRuleCall_4(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRefAccess().getContentsTextOrMarkupParserRuleCall_5_0(), currentNode); 
	    }
		lv_contents_5_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_5_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getRefAccess().getMULTI_NLTerminalRuleCall_6(), null); 
    }
)?	']' 
    {
        createLeafNode(grammarAccess.getRefAccess().getRightSquareBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleOrderedList
entryRuleOrderedList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOrderedListRule(), currentNode); }
	 iv_ruleOrderedList=ruleOrderedList 
	 { $current=$iv_ruleOrderedList.current; } 
	 EOF 
;

// Rule OrderedList
ruleOrderedList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\ol' 
    {
        createLeafNode(grammarAccess.getOrderedListAccess().getOlKeyword_0(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getOrderedListAccess().getANY_WSParserRuleCall_1(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	'[' 
    {
        createLeafNode(grammarAccess.getOrderedListAccess().getLeftSquareBracketKeyword_2(), null); 
    }
((
    { 
        currentNode=createCompositeNode(grammarAccess.getOrderedListAccess().getANY_WSParserRuleCall_3_0(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOrderedListAccess().getItemsItemParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_items_4_0=ruleItem		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOrderedListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"items",
	        		lv_items_4_0, 
	        		"Item", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))+(
    { 
        currentNode=createCompositeNode(grammarAccess.getOrderedListAccess().getANY_WSParserRuleCall_4(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	']' 
    {
        createLeafNode(grammarAccess.getOrderedListAccess().getRightSquareBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleUnorderedList
entryRuleUnorderedList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnorderedListRule(), currentNode); }
	 iv_ruleUnorderedList=ruleUnorderedList 
	 { $current=$iv_ruleUnorderedList.current; } 
	 EOF 
;

// Rule UnorderedList
ruleUnorderedList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\ul' 
    {
        createLeafNode(grammarAccess.getUnorderedListAccess().getUlKeyword_0(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getUnorderedListAccess().getANY_WSParserRuleCall_1(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	'[' 
    {
        createLeafNode(grammarAccess.getUnorderedListAccess().getLeftSquareBracketKeyword_2(), null); 
    }
((
    { 
        currentNode=createCompositeNode(grammarAccess.getUnorderedListAccess().getANY_WSParserRuleCall_3_0(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnorderedListAccess().getItemsItemParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_items_4_0=ruleItem		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnorderedListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"items",
	        		lv_items_4_0, 
	        		"Item", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))+(
    { 
        currentNode=createCompositeNode(grammarAccess.getUnorderedListAccess().getANY_WSParserRuleCall_4(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	']' 
    {
        createLeafNode(grammarAccess.getUnorderedListAccess().getRightSquareBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleItem
entryRuleItem returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getItemRule(), currentNode); }
	 iv_ruleItem=ruleItem 
	 { $current=$iv_ruleItem.current; } 
	 EOF 
;

// Rule Item
ruleItem returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\item' 
    {
        createLeafNode(grammarAccess.getItemAccess().getItemKeyword_0(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getItemAccess().getANY_WSParserRuleCall_1(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	'[' 
    {
        createLeafNode(grammarAccess.getItemAccess().getLeftSquareBracketKeyword_2(), null); 
    }
(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getItemAccess().getMULTI_NLTerminalRuleCall_3(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getItemAccess().getContentsTextOrMarkupParserRuleCall_4_0(), currentNode); 
	    }
		lv_contents_4_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_4_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(RULE_MULTI_NL
    { 
    createLeafNode(grammarAccess.getItemAccess().getMULTI_NLTerminalRuleCall_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getItemAccess().getContentsTextOrMarkupParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_contents_6_0=ruleTextOrMarkup		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_6_0, 
	        		"TextOrMarkup", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getItemAccess().getRightSquareBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleCodeRef
entryRuleCodeRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCodeRefRule(), currentNode); }
	 iv_ruleCodeRef=ruleCodeRef 
	 { $current=$iv_ruleCodeRef.current; } 
	 EOF 
;

// Rule CodeRef
ruleCodeRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\codeRef' 
    {
        createLeafNode(grammarAccess.getCodeRefAccess().getCodeRefKeyword_0(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getCodeRefAccess().getANY_WSParserRuleCall_1(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	'[' 
    {
        createLeafNode(grammarAccess.getCodeRefAccess().getLeftSquareBracketKeyword_2(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeRefAccess().getElementJvmIdentifyableElementCrossReference_3_0(), currentNode); 
	    }
		ruleText		{ 
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getCodeRefAccess().getRightSquareBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLinkRule(), currentNode); }
	 iv_ruleLink=ruleLink 
	 { $current=$iv_ruleLink.current; } 
	 EOF 
;

// Rule Link
ruleLink returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\link' 
    {
        createLeafNode(grammarAccess.getLinkAccess().getLinkKeyword_0(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getLinkAccess().getANY_WSParserRuleCall_1(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	'[' 
    {
        createLeafNode(grammarAccess.getLinkAccess().getLeftSquareBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLinkAccess().getUrlTextParserRuleCall_3_0(), currentNode); 
	    }
		lv_url_3_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"url",
	        		lv_url_3_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getLinkAccess().getRightSquareBracketKeyword_4(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getLinkAccess().getANY_WSParserRuleCall_5(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	'[' 
    {
        createLeafNode(grammarAccess.getLinkAccess().getLeftSquareBracketKeyword_6(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLinkAccess().getTextTextParserRuleCall_7_0(), currentNode); 
	    }
		lv_text_7_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"text",
	        		lv_text_7_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getLinkAccess().getRightSquareBracketKeyword_8(), null); 
    }
)
;





// Entry rule entryRuleImageRef
entryRuleImageRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getImageRefRule(), currentNode); }
	 iv_ruleImageRef=ruleImageRef 
	 { $current=$iv_ruleImageRef.current; } 
	 EOF 
;

// Rule ImageRef
ruleImageRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\img' 
    {
        createLeafNode(grammarAccess.getImageRefAccess().getImgKeyword_0(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getANY_WSParserRuleCall_1(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(	':' 
    {
        createLeafNode(grammarAccess.getImageRefAccess().getColonKeyword_2_0(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getANY_WSParserRuleCall_2_1(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getImageRefAccess().getNameIDTerminalRuleCall_2_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
    { 
        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getANY_WSParserRuleCall_2_3(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*)?	'[' 
    {
        createLeafNode(grammarAccess.getImageRefAccess().getLeftSquareBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getPathTextParserRuleCall_4_0(), currentNode); 
	    }
		lv_path_7_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"path",
	        		lv_path_7_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getImageRefAccess().getRightSquareBracketKeyword_5(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getANY_WSParserRuleCall_6(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	'[' 
    {
        createLeafNode(grammarAccess.getImageRefAccess().getLeftSquareBracketKeyword_7(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getClazzTextParserRuleCall_8_0(), currentNode); 
	    }
		lv_clazz_11_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"clazz",
	        		lv_clazz_11_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getImageRefAccess().getRightSquareBracketKeyword_9(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getANY_WSParserRuleCall_10(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	'[' 
    {
        createLeafNode(grammarAccess.getImageRefAccess().getLeftSquareBracketKeyword_11(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getStyleTextParserRuleCall_12_0(), currentNode); 
	    }
		lv_style_15_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"style",
	        		lv_style_15_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getImageRefAccess().getRightSquareBracketKeyword_13(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getANY_WSParserRuleCall_14(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	'[' 
    {
        createLeafNode(grammarAccess.getImageRefAccess().getLeftSquareBracketKeyword_15(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImageRefAccess().getCaptionTextParserRuleCall_16_0(), currentNode); 
	    }
		lv_caption_19_0=ruleText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"caption",
	        		lv_caption_19_0, 
	        		"Text", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getImageRefAccess().getRightSquareBracketKeyword_17(), null); 
    }
)
;





// Entry rule entryRuleCodeBlock
entryRuleCodeBlock returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCodeBlockRule(), currentNode); }
	 iv_ruleCodeBlock=ruleCodeBlock 
	 { $current=$iv_ruleCodeBlock.current; } 
	 EOF 
;

// Rule CodeBlock
ruleCodeBlock returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'\\code' 
    {
        createLeafNode(grammarAccess.getCodeBlockAccess().getCodeKeyword_0(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getANY_WSParserRuleCall_1(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(	'[' 
    {
        createLeafNode(grammarAccess.getCodeBlockAccess().getLeftSquareBracketKeyword_2_0(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getANY_WSParserRuleCall_2_1(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*(
(
		lv_language_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getCodeBlockAccess().getLanguageIDTerminalRuleCall_2_2_0(), "language"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"language",
	        		lv_language_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
    { 
        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getANY_WSParserRuleCall_2_3(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*	']' 
    {
        createLeafNode(grammarAccess.getCodeBlockAccess().getRightSquareBracketKeyword_2_4(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getANY_WSParserRuleCall_2_5(), currentNode); 
    }
ruleANY_WS
    { 
        currentNode = currentNode.getParent();
    }
)*)?	'[' 
    {
        createLeafNode(grammarAccess.getCodeBlockAccess().getLeftSquareBracketKeyword_3(), null); 
    }
(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getContentsCodeParserRuleCall_4_0_0_0(), currentNode); 
	    }
		lv_contents_9_0=ruleCode		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_9_0, 
	        		"Code", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getContentsMarkupInCodeParserRuleCall_4_0_1_0_0(), currentNode); 
	    }
		lv_contents_10_0=ruleMarkupInCode		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_10_0, 
	        		"MarkupInCode", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getContentsCodeParserRuleCall_4_0_1_1_0(), currentNode); 
	    }
		lv_contents_11_0=ruleCode		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_11_0, 
	        		"Code", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)*)
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getContentsMarkupInCodeParserRuleCall_4_1_0_0(), currentNode); 
	    }
		lv_contents_12_0=ruleMarkupInCode		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_12_0, 
	        		"MarkupInCode", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeBlockAccess().getContentsCodeParserRuleCall_4_1_1_0(), currentNode); 
	    }
		lv_contents_13_0=ruleCode		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeBlockRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contents",
	        		lv_contents_13_0, 
	        		"Code", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)+)	']' 
    {
        createLeafNode(grammarAccess.getCodeBlockAccess().getRightSquareBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleCode
entryRuleCode returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCodeRule(), currentNode); }
	 iv_ruleCode=ruleCode 
	 { $current=$iv_ruleCode.current; } 
	 EOF 
;

// Rule Code
ruleCode returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCodeAccess().getContentsCodeTextParserRuleCall_0(), currentNode); 
	    }
		lv_contents_0_0=ruleCodeText		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCodeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"contents",
	        		lv_contents_0_0, 
	        		"CodeText", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Entry rule entryRuleMarkupInCode
entryRuleMarkupInCode returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMarkupInCodeRule(), currentNode); }
	 iv_ruleMarkupInCode=ruleMarkupInCode 
	 { $current=$iv_ruleMarkupInCode.current; } 
	 EOF 
;

// Rule MarkupInCode
ruleMarkupInCode returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkupInCodeAccess().getEmphasizeParserRuleCall_0(), currentNode); 
    }
    this_Emphasize_0=ruleEmphasize
    { 
        $current = $this_Emphasize_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkupInCodeAccess().getAnchorParserRuleCall_1(), currentNode); 
    }
    this_Anchor_1=ruleAnchor
    { 
        $current = $this_Anchor_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMarkupInCodeAccess().getRefParserRuleCall_2(), currentNode); 
    }
    this_Ref_2=ruleRef
    { 
        $current = $this_Ref_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleCodeText
entryRuleCodeText returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCodeTextRule(), currentNode); } 
	 iv_ruleCodeText=ruleCodeText 
	 { $current=$iv_ruleCodeText.current.getText(); }  
	 EOF 
;

// Rule CodeText
ruleCodeText returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getCodeTextAccess().getIDTerminalRuleCall_0(), null); 
    }

    |    this_MULTI_NL_1=RULE_MULTI_NL    {
		$current.merge(this_MULTI_NL_1);
    }

    { 
    createLeafNode(grammarAccess.getCodeTextAccess().getMULTI_NLTerminalRuleCall_1(), null); 
    }

    |    this_WS_2=RULE_WS    {
		$current.merge(this_WS_2);
    }

    { 
    createLeafNode(grammarAccess.getCodeTextAccess().getWSTerminalRuleCall_2(), null); 
    }

    |    this_SINGLE_NL_3=RULE_SINGLE_NL    {
		$current.merge(this_SINGLE_NL_3);
    }

    { 
    createLeafNode(grammarAccess.getCodeTextAccess().getSINGLE_NLTerminalRuleCall_3(), null); 
    }

    |    this_ANY_OTHER_4=RULE_ANY_OTHER    {
		$current.merge(this_ANY_OTHER_4);
    }

    { 
    createLeafNode(grammarAccess.getCodeTextAccess().getANY_OTHERTerminalRuleCall_4(), null); 
    }

    |
	kw='\\[' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeTextAccess().getReverseSolidusLeftSquareBracketKeyword_5(), null); 
    }

    |
	kw='\\]' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeTextAccess().getReverseSolidusRightSquareBracketKeyword_6(), null); 
    }

    |
	kw=':' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeTextAccess().getColonKeyword_7(), null); 
    }
)+
    ;





// Entry rule entryRuleANY_WS
entryRuleANY_WS returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getANY_WSRule(), currentNode); } 
	 iv_ruleANY_WS=ruleANY_WS 
	 { $current=$iv_ruleANY_WS.current.getText(); }  
	 EOF 
;

// Rule ANY_WS
ruleANY_WS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_MULTI_NL_0=RULE_MULTI_NL    {
		$current.merge(this_MULTI_NL_0);
    }

    { 
    createLeafNode(grammarAccess.getANY_WSAccess().getMULTI_NLTerminalRuleCall_0(), null); 
    }

    |    this_SINGLE_NL_1=RULE_SINGLE_NL    {
		$current.merge(this_SINGLE_NL_1);
    }

    { 
    createLeafNode(grammarAccess.getANY_WSAccess().getSINGLE_NLTerminalRuleCall_1(), null); 
    }

    |    this_WS_2=RULE_WS    {
		$current.merge(this_WS_2);
    }

    { 
    createLeafNode(grammarAccess.getANY_WSAccess().getWSTerminalRuleCall_2(), null); 
    }
)
    ;





RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_SL_COMMENT : '%%' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_MULTI_NL : '\r'? '\n' ('\r'? '\n')+;

RULE_SINGLE_NL : '\r'? '\n';

RULE_WS : (' '|'\t');

RULE_ANY_OTHER : .;


